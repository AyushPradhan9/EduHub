{"version":3,"sources":["assets/sort_img.png","assets/pf1.png","assets/ds.png","assets/Array.jpg","assets/SLL.jpg","assets/DLL.jpg","assets/Ordered_Set.jpg","assets/Unordered_Set.jpg","assets/SAV.jpg","assets/Queue.jpg","assets/Astar.jpg","assets/BFS.jpg","assets/DFS.jpg","assets/Dijkstra.jpg","components/Intro.js","assets/EduhubLogo.png","components/Home.js","assets/EduhubLogo1.png","components/auth/RegistrationForm.js","components/auth/Google/Login.js","components/auth/LoginForm.js","components/auth/Auth.js","routes/Sorting/BubbleSort/BubbleSort.js","routes/Sorting/BubbleSort/VisualizeBubble.jsx","routes/Sorting/BubbleSort/BubbleInfo.js","routes/Sorting/CombSort/CombSort.js","routes/Sorting/CombSort/VisualizeComb.jsx","routes/Sorting/CombSort/CombInfo.js","routes/Sorting/CycleSort/CycleSort.js","routes/Sorting/CycleSort/VisualizeCycle.jsx","routes/Sorting/CycleSort/CycleInfo.js","routes/Sorting/GnomeSort/GnomeSort.js","routes/Sorting/GnomeSort/VisualizeGnome.jsx","routes/Sorting/GnomeSort/GnomeInfo.js","routes/Sorting/HeapSort/HeapSort.js","routes/Sorting/HeapSort/VisualizeHeap.jsx","routes/Sorting/HeapSort/HeapInfo.js","routes/Sorting/InsertionSort/InsertionSort.js","routes/Sorting/InsertionSort/VisualizeInsertion.jsx","routes/Sorting/InsertionSort/InsertionInfo.js","routes/Sorting/MergeSort/MergeSort.js","routes/Sorting/MergeSort/VisualizeMerge.jsx","routes/Sorting/MergeSort/MergeInfo.js","routes/Sorting/PigeonHoleSort/PigeonHoleSort.js","routes/Sorting/PigeonHoleSort/VisualizePigeonHole.jsx","routes/Sorting/PigeonHoleSort/PigeonHoleInfo.js","routes/Sorting/QuickSort/QuickSort.js","routes/Sorting/QuickSort/VisualizeQuick.jsx","routes/Sorting/QuickSort/QuickInfo.js","routes/Sorting/RadixSort/RadixSort.js","routes/Sorting/RadixSort/VisualizeRadix.jsx","routes/Sorting/RadixSort/RadixInfo.js","routes/Sorting/SelectionSort/SelectionSort.js","routes/Sorting/SelectionSort/VisualizeSelection.jsx","routes/Sorting/SelectionSort/SelectionInfo.js","routes/Sorting/ShellSort/ShellSort.js","routes/Sorting/ShellSort/VisualizeShell.jsx","routes/Sorting/ShellSort/ShellInfo.js","routes/Pathfinding/nodeUtils/Node.jsx","routes/Pathfinding/AStar/PathfindingVisualizer.jsx","routes/Pathfinding/AStar/asearch.js","routes/Pathfinding/AStar/AStarInfo.js","routes/Pathfinding/BFS/dijkstra.js","routes/Pathfinding/BFS/PathfindingVisualizer.jsx","routes/Pathfinding/BFS/BFSInfo.js","routes/Pathfinding/DFS/dfs.js","routes/Pathfinding/DFS/PathfindingVisualizer.jsx","routes/Pathfinding/DFS/DFSInfo.js","routes/Pathfinding/Dijkstra/dijkstra.js","routes/Pathfinding/Dijkstra/PathfindingVisualizer.jsx","routes/Pathfinding/Dijkstra/DijkstraInfo.js","routes/DataStructure/Notification.js","routes/DataStructure/utils.js","routes/DataStructure/Array/ArrayVisualizer.jsx","routes/DataStructure/Array/ArrayInfo.js","routes/DataStructure/SortedSet/SSVisualizer.jsx","routes/DataStructure/SortedSet/SSInfo.js","routes/DataStructure/UnsortedSet/USVisualizer.jsx","routes/DataStructure/UnsortedSet/USInfo.js","routes/DataStructure/SinglyLinkedList/SLLVisualizer.jsx","routes/DataStructure/SinglyLinkedList/SLLInfo.js","routes/DataStructure/DoublyLinkedList/DLLVisualizer.jsx","routes/DataStructure/DoublyLinkedList/DLLInfo.js","routes/DataStructure/Queue/QueueVisualizer.jsx","routes/DataStructure/Queue/QueueInfo.js","assets/EduhubLogo1.jpg","components/Drawer.js","App.js","index.js"],"names":["Intro","id","className","href","array","data-lightbox","data-title","src","data_img","alt","sll","style","display","dll","uset","oset","queue","sav","sort_img","astar","path_img","bfs","dfs","dijkstra","React","Component","Home","props","logo","RegisterForm","history","useHistory","useState","name","email","password","reEnterPassword","user","setUser","handleChange","e","target","value","Fragment","Container","Col","Row","type","onChange","maxLength","placeholder","Button","onClick","Swal","fire","icon","text","imageWidth","imageHeight","width","showConfirmButton","showCloseButton","timer","toLowerCase","match","axios","post","then","res","message","data","push","Login","setUserName","setEmail","setPassword","clientId","buttonText","onSuccess","response","regUser","profileObj","signUser","userData","onFailure","cookiePolicy","LoginForm","Auth","registrationFormStatus","setRegistartionFormStatus","loginProps","useSpring","left","registerProps","loginBtnProps","borderBottom","registerBtnProps","button","form","action","div","BubbleSorting","anim","length","low","high","i","j","performSorting","marks","label","VisualizeBubble","state","abar","time","speed","disabled","this","resetArray","arrayBar","document","getElementsByClassName","barStyle","setTimeout","backgroundColor","color","sort","a","b","setState","min","max","Math","floor","random","array2","innerHTML","getElementById","ax","slice","checkAll","bfidx","btidx","boStyle","bsStyle","boidx","newHeight","bsidx","newHeight2","height","bubbleSort","Slider","event","newValue","aria-labelledby","valueLabelDisplay","startSorting","map","idx","BubbleInfo","CombSorting","arr","is_array_sorted","sorted","iteration_count","gap","front","back","temp","VisualizeComb","combSort","CombInfo","CycleSorting","currentIndex","item","currentIndexCopy","VisualizeCycle","cycleSort","CycleInfo","GnomeSorting","moveBack","t","VisualizeGnome","gnomeSort","GnomeInfo","arrlen","maxHeap","right","HeapSorting","VisualizeHeap","heapSort","HeapInfo","InsertionSorting","key","VisualizeInsertion","insertionSort","InsertionInfo","sortingDivisor","mArray","sIdx","eIdx","auxArray","mIdx","k","performMerging","MergeSorting","VisualizeMerge","mergeSort","MergeInfo","PigeonHoleSorting","inputArray","pigeonholeArray","inputArrayIndex","VisualizePigeonHole","pigeonholeSort","PigeonHoleInfo","pi","pivot","partition","QuickSorting","console","log","VisualizeQuick","quickSort","QuickInfo","RadixSorting","num","place","toString","getMax","buckets","Array","from","abs","pow","concat","VisualizeRadix","fx","sx","o","radixSort","RadixInfo","SelectionSorting","len","tmp","VisualizeSelection","selectionSort","SelectionInfo","ShellSorting","increment","parseInt","VisualizeShell","shellSort","ShellInfo","Node","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","direction","totaldistance","distance","weight","heuristicValue","START_NODE_ROW","FINISH_NODE_COL","PathfindingVisualizer","initialState","grid","mouseIsPressed","getInitialGrid","newGrid","getNewGridWithWallToggled","visitedNodesInOrder","nodesInShortestPathOrder","animateShortestPath","node","node2","last_row","last_col","currRow","currCol","startNode","finishNode","vnio","start","ol","curr","nos","td","c","cha","chc","d","chd","chb","asearch","Infinity","sp","getNodesInShortestPathOrderA","reverse","animateAsearch","componentDidMount","rowIdx","nodeIdx","getNewGridWithWallToggledOff","handleMouseDown","handleMouseEnter","handleMouseUp","getNewGridWithStart","getNewGridWithEnd","rM","count","getNewGridWithWallToggledOn","window","clearTimeout","resetMaze","grid1","visualizeASearch","size","startVisualization","createVerticalMaze","createHorizontalMaze","createRandomMaze","currentRow","createNode","isVisited","previousNode","newNode","AStarInfo","unvisitedNodes","nodes","getAllNodes","sortNodesByDistance","closestNode","shift","updateUnvisitedNeighbors","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","currentNode","unshift","getNodesInShortestPathOrderD","animateDijkstra","visualizeDijkstra","BFSInfo","getUnvisitedNeighbours","neighbours","neighbour","unvisitedNeighbours","unvisitedNeighbour","getNodesInShortestPathOrderDFS","animateDFS","visualizeDFS","DFSInfo","DijkstraInfo","Notification","options","instance","_dismissAllLock","_dom","_active","_queue","_default","_position","_thickBorder","_duration","_transition","_maxActive","version","_init","body","removeChild","Object","keys","forEach","undefined","createElement","classList","add","handler","position","thickBorder","duration","transition","maxActive","notification","title","iconless","closable","sticky","renderTo","CBtitle","callback","isDimmed","success","info","warning","error","svgPath","_setOptionsDefault","_setAttributesDefault","_attach","fragment","createDocumentFragment","appendChild","closeFired","_unDim","_close","requestCount","_decrementRequestCounter","timeoutID","dom","close","removeEventListener","addEventListener","bind","_resetTimeout","totalRequestCount","_buildUIDom","_buildNotificationType","maintitle","callbackButton","createElementNS","iconPath","setAttribute","indexOf","_events","_open","_checkCounter","insertBefore","firstChild","opened","Date","now","opacity","isClosing","closed","effectiveDuration","_start","valueToDisplay","counter","force","_dim","contains","that","halfFadeOut","halfFadeIn","seed","hash","charCodeAt","split","join","substring","toUpperCase","_checkNotificationOptionsValidity","_setOptionsFallback","_buildUI","_idGenerator","_incrementRequestCounter","new","_clearRequestCount","dismiss","applyDrag","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","result2","generateItems","creator","groupStyle","margin","overflowX","ac","sz","ArrayVisualizer","cn","items3","vl","border","x","includes","addValueArr","deleteValue","pop","groupName","orientation","getChildPayload","onDrop","messageCallSet","ArrayInfo","SSVisualizer","addValueSortedSet","refs","dsType","SSInfo","USVisualizer","addValueUnsortedSet","USInfo","SLLVisualizer","SLLInfo","DLLVisualizer","DLLInfo","QueueVisualizer","QueueInfo","drawerWidth","openedMixin","theme","transitions","create","easing","sharp","enteringScreen","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","CustomDrawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","withRouter","useTheme","setOpen","expandSort","setExpandSort","expandDs","setExpandDs","expandPath","setExpandPath","userName","AccountName","handleDrawerOpen","handleDrawerClose","itemsList","fontSize","dsList","sortList","pathList","Box","CssBaseline","Toolbar","IconButton","aria-label","edge","marginRight","variant","onMouseLeave","List","Divider","index","ListItem","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","component","disablePadding","item2","index2","marginBottom","bottom","useStyles","makeStyles","container","marginTop","App","classes","exact","path","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.61e097e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sort_img.26098497.png\";","export default __webpack_public_path__ + \"static/media/pf1.88f9cb5b.png\";","export default __webpack_public_path__ + \"static/media/ds.88272de6.png\";","export default __webpack_public_path__ + \"static/media/Array.3d14742d.jpg\";","export default __webpack_public_path__ + \"static/media/SLL.8340f13d.jpg\";","export default __webpack_public_path__ + \"static/media/DLL.d02df974.jpg\";","export default __webpack_public_path__ + \"static/media/Ordered_Set.83043eb3.jpg\";","export default __webpack_public_path__ + \"static/media/Unordered_Set.fa496e51.jpg\";","export default __webpack_public_path__ + \"static/media/SAV.0f36e5fa.jpg\";","export default __webpack_public_path__ + \"static/media/Queue.6c3eecb3.jpg\";","export default __webpack_public_path__ + \"static/media/Astar.dc71c517.jpg\";","export default __webpack_public_path__ + \"static/media/BFS.911ac999.jpg\";","export default __webpack_public_path__ + \"static/media/DFS.b5376513.jpg\";","export default __webpack_public_path__ + \"static/media/Dijkstra.a65e5789.jpg\";","import React from \"react\";\r\nimport './styles/Intro.css';\r\nimport sort_img from '../assets/sort_img.png';\r\nimport path_img from '../assets/pf1.png';\r\nimport data_img from '../assets/ds.png';\r\nimport array from \"../assets/Array.jpg\";\r\nimport sll from \"../assets/SLL.jpg\";\r\nimport dll from \"../assets/DLL.jpg\";\r\nimport oset from \"../assets/Ordered_Set.jpg\";\r\nimport uset from \"../assets/Unordered_Set.jpg\";\r\nimport sav from \"../assets/SAV.jpg\"\r\nimport queue from \"../assets/Queue.jpg\";\r\nimport astar from \"../assets/Astar.jpg\";\r\nimport bfs from \"../assets/BFS.jpg\";\r\nimport dfs from \"../assets/DFS.jpg\";\r\nimport dijkstra from \"../assets/Dijkstra.jpg\";\r\nimport 'popper.js/dist/popper.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'lightbox2/dist/css/lightbox.min.css';\r\nimport 'lightbox2/dist/js/lightbox.min.js';\r\nclass Intro extends React.Component {\r\n  render() {\r\n    return (\r\n      <section id=\"work\" className=\"portfolio-mf sect-pt4 route\">\r\n        <div className=\"intro-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"title-box text-center\">\r\n                <h3 className=\"title-a\">LEARNING THAT CREATES LIFELONG MEMORIES</h3>\r\n                <p className=\"subtitle-a\">\r\n                  THE CANVAS OF <u>IMAGINATION</u> | THE <u>PLAYGROUND</u> OF CONCEPTS\r\n                </p>\r\n                <div className=\"line-mf\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row text-center\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"work-box\">\r\n                <a href={array} data-lightbox=\"gallery-todo\" data-title=\"Array\">\r\n                  <div className=\"work-img\">\r\n                    <img src={data_img} alt=\"\" className=\"img-fluid\" />\r\n                  </div>\r\n                  <div className=\"work-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <h2 className=\"w-title\">Data Structures</h2>\r\n                        <div className=\"w-more\">\r\n                          <span className=\"w-ctegory\">\r\n                            Array, Linked Lists, Sets and Queue\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <a\r\n                  href={sll}\r\n                  data-title=\"Singly Linked List\"\r\n                  data-lightbox=\"gallery-todo\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={dll}\r\n                  data-title=\"Doubly Linked List\"\r\n                  data-lightbox=\"gallery-todo\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={uset}\r\n                  data-title=\"Unordered Set\"\r\n                  data-lightbox=\"gallery-todo\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={oset}\r\n                  data-title=\"Ordered Set\"\r\n                  data-lightbox=\"gallery-todo\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={queue}\r\n                  data-title=\"Queue\"\r\n                  data-lightbox=\"gallery-todo\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"work-box\">\r\n                <a href={sav} data-lightbox=\"gallery-vmarine\" data-title=\"Sorting Algorithm Visualizer\">\r\n                  <div className=\"work-img\">\r\n                    <img src={sort_img} alt=\"\" className=\"img-fluid\" />\r\n                  </div>\r\n                  <div className=\"work-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <h2 className=\"w-title\">Sorting Algorithms</h2>\r\n                        <div className=\"w-more\">\r\n                          <span className=\"w-ctegory\">\r\n                            Bubble, Insertion, Merge, Quick, etc...\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"work-box\">\r\n                <a href={astar} data-lightbox=\"gallery-aguadeluz\" data-title=\"Astar Algorithm\">\r\n                  <div className=\"work-img\">\r\n                    <img src={path_img} alt=\"\" className=\"img-fluid\" />\r\n                  </div>\r\n                  <div className=\"work-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <h2 className=\"w-title\">Path Finding Algorithms</h2>\r\n                        <div className=\"w-more\">\r\n                          <span className=\"w-ctegory\">\r\n                            Astar, BFS, DFS and Dijkstra\r\n                          </span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <a\r\n                  href={bfs}\r\n                  data-lightbox=\"gallery-aguadeluz\"\r\n                  data-title=\"Breadth First Search Algorithm\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={dfs}\r\n                  data-title=\"Depth First Search Algorithm\"\r\n                  data-lightbox=\"gallery-aguadeluz\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n                <a\r\n                  href={dijkstra}\r\n                  data-title=\"Dijkstra Algorithm\"\r\n                  data-lightbox=\"gallery-aguadeluz\"\r\n                  style={{ display: \"none\" }}\r\n                >\r\n                  jsx-a11y/anchor-has-content warning\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;","export default __webpack_public_path__ + \"static/media/EduhubLogo.6029466a.png\";","import React from \"react\";\r\nimport Intro from './Intro';\r\nimport logo from \"../assets/EduhubLogo.png\";\r\nimport \"./styles/Home.css\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-12 my-3\">\r\n          <img\r\n            src={logo}\r\n            className=\"logo\"\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        <div className=\"col-12 my-3\">\r\n          <h4 className=\"font-weight-normal\">Vizualize & Analyze To Cognize</h4>\r\n        </div>\r\n        <div className=\"col-12 my-3\">\r\n          <hr className=\"font-weight-bold\" />\r\n          <h4 className=\"font-weight-bold font-italic\">An initialization to make learning easy by simplify, exemplify and intensify the vizualization of core concepts...</h4>\r\n          <hr />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Intro />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/EduhubLogo1.49e4716a.png\";","import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport logo from \"../../assets/EduhubLogo1.png\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function RegisterForm() {\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        reEnterPassword: \"\"\r\n    });\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const register = () => {\r\n        const { name, email, password, reEnterPassword } = user;\r\n        if (name === \"\" || email === \"\" || password === \"\" || reEnterPassword === \"\") {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Please fill all fields\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n        else if (!email\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            )) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Invalid Email\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n        else if (password !== reEnterPassword) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Re-Entered password doesn't match\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n        else if (name && email && password && (password === reEnterPassword)) {\r\n            axios.post(\"http://localhost:9002/register\", user)\r\n                .then(res => {\r\n                    const message = res.data.message;\r\n                    if (message === \"Successfully Registered\") {\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            text: message,\r\n                            imageWidth: 100,\r\n                            imageHeight: 100,\r\n                            width: 350,\r\n                            showConfirmButton: false,\r\n                            showCloseButton: true,\r\n                            timer: 2000\r\n                        });\r\n                    }\r\n                    else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            text: message,\r\n                            imageWidth: 100,\r\n                            imageHeight: 100,\r\n                            width: 350,\r\n                            showConfirmButton: false,\r\n                            showCloseButton: true,\r\n                            timer: 2000\r\n                        });\r\n                    }\r\n                    history.push(\"/\");\r\n                })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Invalid Input\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Col>\r\n                    <Row>\r\n                        <img src={logo} alt=\"Eduhub\" className=\"authLogo\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"text\" name=\"name\" value={user.name}\r\n                            onChange={handleChange} maxLength=\"50\" placeholder=\"&#xf007;  Full Name\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"email\" name=\"email\" value={user.email}\r\n                            onChange={handleChange} maxLength=\"50\" placeholder=\"&#xf0e0;  E-mail\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"password\" name=\"password\" value={user.password}\r\n                            onChange={handleChange} maxLength=\"50\" placeholder=\"&#xf023;  Password\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"password\" name=\"reEnterPassword\" value={user.reEnterPassword}\r\n                            onChange={handleChange} maxLength=\"50\" placeholder=\"&#xf023;  Re-enter Password\" />\r\n                    </Row>\r\n                    <Row className=\"m-auto\">\r\n                        <Button onClick={register} className=\"submit\" id=\"formSubmit\">SignUp</Button>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst apiKey = '99605690667-e3rljsmlvbii2bjofju53s5vqtfd6nc7.apps.googleusercontent.com';\r\n\r\nconst Login = ({ setUserName, setEmail, setPassword }) => {\r\n    const history = useHistory();\r\n\r\n    const onSuccess = (response) => {\r\n        const regUser = {\r\n            name: response.profileObj.name,\r\n            email: response.profileObj.email,\r\n            password: \"fnkj@#14n1513#23@#$\"\r\n        }\r\n        const signUser = {\r\n            email: response.profileObj.email,\r\n            password: \"fnkj@#14n1513#23@#$\"\r\n        }\r\n        axios.post(\"http://localhost:9002/register\", regUser)\r\n            .then(res => {\r\n                const message = res.data.message;\r\n                if (message === \"Successfully Registered\" || message === \"Email already registered\") {\r\n                    axios.post(\"http://localhost:9002/login\", signUser)\r\n                        .then(res => {\r\n                            const message = res.data.message;\r\n                            const userData = res.data.user;\r\n                            if (message === \"Login Successful\") {\r\n                                if (userData) {\r\n                                    setUserName(userData.name);\r\n                                    setEmail(userData.email);\r\n                                    setPassword(userData.password);\r\n                                }\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    text: message,\r\n                                    imageWidth: 100,\r\n                                    imageHeight: 100,\r\n                                    width: 350,\r\n                                    showConfirmButton: false,\r\n                                    showCloseButton: true,\r\n                                    timer: 2000\r\n                                });\r\n                            }\r\n                            else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    text: message,\r\n                                    imageWidth: 100,\r\n                                    imageHeight: 100,\r\n                                    width: 350,\r\n                                    showConfirmButton: false,\r\n                                    showCloseButton: true,\r\n                                    timer: 2000\r\n                                });\r\n                            }\r\n                            history.push(\"/\");\r\n                        })\r\n                }\r\n                else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: message,\r\n                        imageWidth: 100,\r\n                        imageHeight: 100,\r\n                        width: 350,\r\n                        showConfirmButton: false,\r\n                        showCloseButton: true,\r\n                        timer: 2000\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    const onFailure = (response) => {\r\n    };\r\n\r\n    return (\r\n        <div className='m-auto'>\r\n            <GoogleLogin\r\n                clientId={apiKey}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../../assets/EduhubLogo1.png\";\r\nimport GoogleLogin from \"./Google/Login\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst LoginForm = ({ setUserName, setEmail, setPassword }) => {\r\n    const history = useHistory()\r\n\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n\r\n        })\r\n    }\r\n\r\n    const login = () => {\r\n        if (user.email === \"\" || user.password === \"\") {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Please fill all fields\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n        else if (!user.email\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            )) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: \"Invalid Email\",\r\n                imageWidth: 100,\r\n                imageHeight: 100,\r\n                width: 350,\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                timer: 2000\r\n            });\r\n        }\r\n        else {\r\n            axios.post(\"http://localhost:9002/login\", user)\r\n                .then(res => {\r\n                    const message = res.data.message;\r\n                    const userData = res.data.user;\r\n                    if (message === \"Login Successful\") {\r\n                        if (userData) {\r\n                            setUserName(userData.name);\r\n                            setEmail(userData.email);\r\n                            setPassword(userData.password);\r\n                        }\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            text: message,\r\n                            imageWidth: 100,\r\n                            imageHeight: 100,\r\n                            width: 350,\r\n                            showConfirmButton: false,\r\n                            showCloseButton: true,\r\n                            timer: 2000\r\n                        });\r\n                    }\r\n                    else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            text: message,\r\n                            imageWidth: 100,\r\n                            imageHeight: 100,\r\n                            width: 350,\r\n                            showConfirmButton: false,\r\n                            showCloseButton: true,\r\n                            timer: 2000\r\n                        });\r\n                    }\r\n                    history.push(\"/\");\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Col>\r\n                    <Row>\r\n                        <img src={logo} alt=\"Eduhub\" className=\"authLogo\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"email\" name=\"email\" value={user.email ? user.email : \"\"}\r\n                            onChange={handleChange} placeholder=\"&#xf0e0;  E-mail\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <input type=\"password\" name=\"password\" value={user.password}\r\n                            onChange={handleChange} placeholder=\"&#xf023;  Password\" />\r\n                    </Row>\r\n                    <Row className=\"m-auto w-100\">\r\n                        <Button onClick={login} className=\"submit\" id=\"formSubmit\">Login</Button>\r\n                    </Row>\r\n                    <Row>\r\n                        <GoogleLogin setUserName={setUserName} setEmail={setEmail} setPassword={setPassword} />\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default LoginForm;","import React, { useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport RegisterForm from \"./RegistrationForm\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = ({ setUserName, setEmail, setPassword }) => {\r\n  const [registrationFormStatus, setRegistartionFormStatus] = useState(false);\r\n\r\n  const loginProps = useSpring({\r\n    left: registrationFormStatus ? -600 : 0, // Login form sliding positions\r\n  });\r\n  const registerProps = useSpring({\r\n    left: registrationFormStatus ? 0 : 600, // Register form sliding positions \r\n  });\r\n\r\n  const loginBtnProps = useSpring({\r\n    borderBottom: registrationFormStatus\r\n      ? \"solid 0px transparent\"\r\n      : \"solid 2px #1059FF\",  //Animate bottom border of login button\r\n  });\r\n  const registerBtnProps = useSpring({\r\n    borderBottom: registrationFormStatus\r\n      ? \"solid 2px #1059FF\"\r\n      : \"solid 0px transparent\", //Animate bottom border of register button\r\n  });\r\n  function registerClicked() {\r\n    setRegistartionFormStatus(true);\r\n  }\r\n  function loginClicked() {\r\n    setRegistartionFormStatus(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"maincontainer\">\r\n      <div className=\"container\">\r\n        <div className=\"login-register-wrapper\">\r\n          <div className=\"nav-buttons text-center\">\r\n            <animated.button\r\n              onClick={loginClicked}\r\n              id=\"loginBtn\"\r\n              style={loginBtnProps}\r\n            >\r\n              Login\r\n            </animated.button>\r\n            <animated.button\r\n              onClick={registerClicked}\r\n              id=\"registerBtn\"\r\n              style={registerBtnProps}\r\n            >\r\n              Register\r\n            </animated.button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <animated.form action=\"\" id=\"loginform\" style={loginProps}>\r\n              <LoginForm setUserName={setUserName} setEmail={setEmail} setPassword={setPassword} />\r\n            </animated.form>\r\n            <animated.form action=\"\" id=\"registerform\" style={registerProps}>\r\n              <RegisterForm />\r\n            </animated.form>\r\n          </div>\r\n          <animated.div className=\"forgot-panel\" style={loginProps} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react'\r\n\r\nfunction BubbleSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  performSorting(array,0,array.length -1,anim);\r\n  return anim;\r\n}\r\n\r\nfunction performSorting(array,low,high,anim) {\r\n  for(let i=0;i<high;++i)\r\n  {\r\n    for(let j=0;j<high-i;++j)\r\n    {\r\n      anim.push([j,j+1]);\r\n      anim.push([j,j+1]);\r\n      if(array[j]>array[j+1]) {\r\n        [array[j],array[j+1]]=[array[j+1],array[j]];\r\n      }\r\n      anim.push([j,array[j],j+1,array[j+1]]);\r\n    }\r\n  }\r\n}\r\n\r\nexport default BubbleSorting\r\n","import React, { Component } from \"react\";\r\nimport BubbleSorting from \"./BubbleSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeBubble extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  bubbleSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = BubbleSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [bfidx, btidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const color = i % 3 === 0 ? \"#ffffff\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.bubbleSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeBubble from './VisualizeBubble.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction BubbleInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Bubble Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order.\r\n              This algorithm is not suitable for large data sets as its average and worst case complexity are of Ο(n2) where n is the number of items.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>We are given with an input array which is supposed to be sorted in ascending order</li>\r\n                <li>We start with the first element and i=0 index and check if the element present at i+1 is greater then we swap the elements at index i and i+1.</li>\r\n                <li>If above is not the case, then no swapping will take place.</li>\r\n                <li>Now  “ i ” gets incremented and the above 2 steps happen again until the array is exhausted.</li>\r\n                <li>We will ignore the last index as it is already sorted.</li>\r\n                <li>Now the largest element will be at the last index of the array.</li>\r\n                <li>Now we will again set i=0 and continue with the same steps that will eventually place second largest at second last place in the array. Now the last 2 indexes of the array are sorted.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">BubbleSort(arr, size)<br />\r\n                  &emsp;for i=0 to n-i-1<br />\r\n                  &emsp;&emsp;for j=0 to n-i-2<br />\r\n                  &emsp;&emsp;&emsp;if arr[j]&gt;arr[j+1]<br />\r\n                  &emsp;&emsp;&emsp;&emsp;Swap arr[j] and arr[j+1]<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\">\r\n            <VisualizeBubble></VisualizeBubble>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BubbleInfo;\r\n","import React from 'react'\r\n\r\nfunction CombSorting(arr)\r\n{\r\n  const anim=[];\r\n  function is_array_sorted(arr) {\r\n    var sorted = true;\r\n    for (var i = 0; i < arr.length-1; i++) {\r\n      if (arr[i] > arr[i+1])\r\n      {\r\n        sorted = false;\r\n        break;\r\n      }\r\n    }\r\n    return sorted;\r\n  }\r\n\r\n  var iteration_count = 0;\r\n  var gap = arr.length - 2;\r\n  var decrease_factor = 1.25;\r\n\r\n  while (!is_array_sorted(arr))\r\n  {\r\n    if (iteration_count > 0)\r\n    gap = (gap == 1) ? gap : Math.floor(gap / decrease_factor);\r\n\r\n    var front = 0;\r\n    var back = gap;\r\n    while (back < arr.length)\r\n    {\r\n      if (arr[front] > arr[back])\r\n      {\r\n        var temp = arr[front];\r\n        arr[front] = arr[back];\r\n        arr[back] = temp;\r\n      }\r\n      anim.push([front,back]);\r\n      anim.push([front,back]);\r\n      anim.push([front,arr[front],back,arr[back]]);\r\n      front += 1;\r\n      back += 1;\r\n    }\r\n    iteration_count += 1;\r\n  }\r\n  return anim;\r\n}\r\n\r\n\r\nexport default CombSorting\r\n","import React, { Component } from \"react\";\r\nimport CombSorting from \"./CombSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeComb extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  combSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = CombSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [bfidx, btidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.combSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"no\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeComb from './VisualizeComb.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction CombInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Comb Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">Comb Sort is mainly an improvement over Bubble Sort. Bubble sort always compares adjacent values. So all inversions are removed one by one. Comb Sort improves on Bubble Sort by using gap of size more than 1.\r\n              The gap starts with a large value and shrinks by a factor of 1.3 in every iteration until it reaches the value 1. Thus Comb Sort removes more than one inversion counts with one swap and performs better than Bubble Sort.\r\n              The shrink factor has been empirically found to be 1.3 (by testing Combsort on over 200,000 random lists).\r\n              Although, it works better than Bubble Sort on average, worst case remains O(n2).\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>Create and initialise variables gap and swapped and constant SHRINK_FACTOR</li>\r\n                <ol>\r\n                  <li>gap = size of the array</li>\r\n                  <li>swapped = false</li>\r\n                  <li>SHRINK_FACTOR = 1.3</li>\r\n                </ol>\r\n                <li>Set swapped = false</li>\r\n                <li>Set gap = gap/SHRINK_FACTOR</li>\r\n                <li>Iterate over the array from i = 0 to i &lt; n - gap:</li>\r\n                <li>if array[i] &gt; array[i + gap]</li>\r\n                <ol>\r\n                  <li>swap the elements array[i] and array[i + gap]</li>\r\n                  <li>set swapped = true</li>\r\n                </ol>\r\n                <li>Repeat steps 2-4 while gap != 1 and swapped = true</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">CombSort(array, size)<br />\r\n                  &emsp;gap = size<br />\r\n                  &emsp;flag = true<br />\r\n                  &emsp;while(gap != 1 || flag == true)<br />\r\n                  &emsp;&emsp;gap = (gap*10)/13<br />\r\n                  &emsp;&emsp;if(gap&lt;1)<br />\r\n                  &emsp;&emsp;&emsp;gap = 1<br />\r\n                  &emsp;&emsp;flag = false<br />\r\n                  &emsp;for(i = 0; i&lt;size-gap; i++)<br />\r\n                  &emsp;&emsp;if(array[i] &gt; array[i+gap])<br />\r\n                  &emsp;&emsp;&emsp;swap(array[i], array[i+gap])<br />\r\n                  &emsp;&emsp;&emsp;flag = true<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeComb></VisualizeComb>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CombInfo;\r\n","function CycleSorting(array) {\r\n  const anim = [];\r\n  for (let currentIndex = 0; currentIndex < array.length - 1; currentIndex++) {\r\n    let item = array[currentIndex];\r\n    let currentIndexCopy = currentIndex;\r\n    for (let i = currentIndex + 1; i < array.length; i++) {\r\n      if (array[i] < item) {\r\n        currentIndexCopy++;\r\n      }\r\n    }\r\n    if (currentIndexCopy === currentIndex) {\r\n      continue;\r\n    }\r\n    while (item === array[currentIndexCopy]) {\r\n      currentIndexCopy++;\r\n    }\r\n    let temp = array[currentIndexCopy];\r\n    array[currentIndexCopy] = item;\r\n    item = temp;\r\n    anim.push([currentIndexCopy, currentIndexCopy]);\r\n    anim.push([currentIndexCopy, currentIndexCopy]);\r\n    anim.push([currentIndexCopy, array[currentIndexCopy], currentIndexCopy, array[currentIndexCopy]]);\r\n    while (currentIndexCopy !== currentIndex) {\r\n      currentIndexCopy = currentIndex;\r\n      for (let i = currentIndex + 1; i < array.length; i++) {\r\n        if (array[i] < item) {\r\n          currentIndexCopy++;\r\n        }\r\n      }\r\n      while (item === array[currentIndexCopy]) {\r\n        currentIndexCopy++;\r\n      }\r\n      temp = array[currentIndexCopy];\r\n      array[currentIndexCopy] = item;\r\n      item = temp;\r\n      anim.push([currentIndex, currentIndexCopy]);\r\n      anim.push([currentIndex, currentIndexCopy]);\r\n      anim.push([currentIndex, array[currentIndex], currentIndexCopy, array[currentIndexCopy]]);\r\n    }\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default CycleSorting\r\n","import React, { Component } from \"react\";\r\nimport CycleSorting from \"./CycleSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeCycle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  cycleSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = CycleSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [bfidx, btidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.cycleSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeCycle from './VisualizeCycle';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction CycleInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Cycle Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Cycle sort is a comparison sorting algorithm that forces array to be factored into the number of cycles where each of them can be rotated to produce a sorted array.\r\n              It is theoretically optimal in the sense that it reduces the number of writes to the original array.\r\n              It is an in-place and unstable sorting algorithm. Cycle sort forces an array to be factored into a number of cycles where every element can rotate in order to produce a sorted array. The time complexity of cycle sort is O(n2), even in the best case.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b><br />\r\n              Consider an array of n distinct elements.<br />\r\n              An element a is given, index of a can be calculated by counting the number of elements that are smaller than a.\r\n              <ol>\r\n                <li>If the element is found to be at its correct position, simply leave it as it is.</li>\r\n                <li>Otherwise, find the correct position of a by counting the total number of elements that are less than a. where it must be present in the sorted array. The other element b which is replaced is to be moved to its correct position.\r\n                  This process continues until we got an element at the original position of a.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">CycleSort(array)<br />\r\n                  &emsp;output = 0<br />\r\n                  &emsp;for cycleStart from 0 to length(array) - 2<br />\r\n                  &emsp;&emsp;item = array[cycleStart]<br />\r\n                  &emsp;&emsp;pos = cycleStart<br />\r\n                  &emsp;&emsp;for i from cycleStart + 1 to length(array) - 1<br />\r\n                  &emsp;&emsp;&emsp;if array[i] &lt; item:<br />\r\n                  &emsp;&emsp;&emsp;&emsp;pos += 1<br />\r\n                  &emsp;&emsp;&emsp;if pos == cycleStart:<br />\r\n                  &emsp;&emsp;&emsp;&emsp;continue<br />\r\n                  &emsp;&emsp;while item == array[pos]:<br />\r\n                  &emsp;&emsp;&emsp;pos += 1<br />\r\n                  &emsp;&emsp;array[pos], item = item, array[pos]<br />\r\n                  &emsp;&emsp;writes += 1<br />\r\n                  &emsp;&emsp;while pos != cycleStart:<br />\r\n                  &emsp;&emsp;&emsp;pos = cycleStart<br />\r\n                  &emsp;&emsp;&emsp;for i from cycleStart + 1 to length(array) - 1<br />\r\n                  &emsp;&emsp;&emsp;&emsp;if array[i] &lt; item:<br />\r\n                  &emsp;&emsp;&emsp;&emsp;&emsp;pos += 1<br />\r\n                  &emsp;&emsp;&emsp;while item == array[pos]:<br />\r\n                  &emsp;&emsp;&emsp;&emsp;pos += 1<br />\r\n                  &emsp;&emsp;&emsp;array[pos], item = item, array[pos]<br />\r\n                  &emsp;&emsp;&emsp;writes += 1<br />\r\n                  &emsp;return outout<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeCycle></VisualizeCycle>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CycleInfo;\r\n","import React from 'react'\r\n\r\nfunction GnomeSorting(arr)\r\n{\r\n  const anim=[];\r\n  function moveBack(i)\r\n  {\r\n    for( ; i > 0 && arr[i-1] > arr[i]; i--)\r\n    {\r\n      var t = arr[i];\r\n      arr[i] = arr[i-1];\r\n      arr[i-1] = t;\r\n      anim.push([i,i-1]);\r\n      anim.push([i,i-1]);\r\n      anim.push([i,arr[i],i-1,arr[i-1]]);\r\n    }\r\n  }\r\n\r\n  for (var i = 1; i < arr.length; i++)\r\n  {\r\n    if (arr[i-1] > arr[i])\r\n    {\r\n      moveBack(i);\r\n    }\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default GnomeSorting\r\n","import React, { Component } from \"react\";\r\nimport GnomeSorting from \"./GnomeSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeGnome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  gnomeSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = GnomeSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [boidx, bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.gnomeSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeGnome from './VisualizeGnome.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction GnomeInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Gnome Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              The gnome sort is a sorting algorithm which is similar to insertion sort in that it works with one item at a time but gets the item to the proper place by a series of swaps, similar to a bubble sort. It is conceptually simple, requiring no nested loops. The average running time is O(n2) but tends towards O(n) if the list is initially almost sorted.\r\n              The algorithm finds the first place where two adjacent elements are in the wrong order and swaps them. It takes advantage of the fact that performing a swap can introduce a new out-of-order adjacent pair next to the previously swapped elements. It does not assume that elements forward of the current position are sorted, so it only needs to check the position directly previous to the swapped elements.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>If you are at the start of the array then go to the right element (from arr[0] to arr[1]).</li>\r\n                <li>If the current array element is larger or equal to the previous array element then go one step right</li>\r\n                <li>If the current array element is smaller than the previous array element then swap these two elements and go one step backwards</li>\r\n                <li>Repeat steps 2) and 3) till ‘i’ reaches the end of the array (i.e- ‘n-1’)</li>\r\n                <li>If the end of the array is reached then stop and the array is sorted.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">GnomeSort(arr, n)<br />\r\n                  &emsp;index = 0<br />\r\n                  &emsp;while (index &lt; n)<br />\r\n                  &emsp;&emsp;if (index == 0)<br />\r\n                  &emsp;&emsp;&emsp; index++<br />\r\n                  &emsp;&emsp;if (arr[index] &gt;= arr[index - 1])<br />\r\n                  &emsp;&emsp;&emsp;index++<br />\r\n                  &emsp;&emsp;else<br />\r\n                  &emsp;&emsp;&emsp;swap(arr[index], arr[index - 1])<br />\r\n                  &emsp;&emsp;&emsp;index--<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeGnome></VisualizeGnome>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GnomeInfo;\r\n","import React from 'react'\r\n\r\nlet arrlen;\r\n\r\nfunction HeapSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  arrlen = array.length;\r\n  for (let i = Math.floor(arrlen / 2); i >= 0; i -= 1){\r\n    maxHeap(array, i,anim);\r\n  }\r\n  for (let i = arrlen-1; i > 0; i--) {\r\n\r\n    anim.push([0,i]);\r\n    anim.push([0,i]);\r\n    [array[0],array[i]]=[array[i],array[0]]\r\n    anim.push([0,array[0],i,array[i]]);\r\n    arrlen--;\r\n    maxHeap(array, 0,anim)\r\n  }\r\n  return anim;\r\n}\r\n\r\nfunction maxHeap(array,i,anim) {\r\n  const left = 2 * i + 1\r\n  const right = 2 * i + 2\r\n  let max = i\r\n\r\n  if (left < arrlen && array[left] > array[max]) {\r\n    max = left\r\n  }\r\n\r\n  if (right < arrlen && array[right] > array[max])     {\r\n    max = right\r\n  }\r\n\r\n  anim.push([i,max]);\r\n  anim.push([i,max]);\r\n\r\n  if (max != i) {\r\n    [array[i],array[max]]=[array[max],array[i]];\r\n    anim.push([i,array[i],max,array[max]]);\r\n    maxHeap(array, max,anim)\r\n  }\r\n  else {\r\n    anim.push([i,array[i],max,array[max]]);\r\n  }\r\n  return ;\r\n}\r\n\r\nexport default HeapSorting\r\n","import React, { Component } from \"react\";\r\nimport HeapSorting from \"./HeapSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeHeap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  heapSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = HeapSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [boidx, bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.heapSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeHeap from './VisualizeHeap.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction HeapInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Heap Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Heap sort can be understood as the improved version of the binary search tree. It does not create a node as in case of binary search tree instead it builds the heap by adjusting the position of elements within the array itself.\r\n              In which method a tree structure called heap is used where a heap is a type of binary tree. An ordered balanced binary tree is called a Min-heap, where the value at the root of any subtree is less than or equal to the value of either of its children.\r\n              An ordered balanced binary tree is called a max heap where the value at the root of any subtree is more than or equal to the value of either of its children.\r\n              It is not necessary that the two children must be in some order. sometimes the value in the left child may be more than the value at the right child and some other time it may be the other way round.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>First, call build max heap to set the heap initially</li>\r\n                <li>Once the heap is created, take the root and wap it will the last element of the heap</li>\r\n                <li>Reduce the size of the heap</li>\r\n                <li>Call max heapify of index 0 i.e, the new root of the heap</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">HeapSort(arr)<br />\r\n                  &emsp;buildMaxHeap(arr)<br />\r\n                  &emsp;for (int i = n - 1; i &gt;= 0; i--)<br />\r\n                  &emsp;&emsp;swap(&amp; arr[0], &amp; arr[i]);<br />\r\n                  &emsp;&emsp;heapsize--;<br />\r\n                  &emsp;&emsp;maxHeapify(arr,0);<br />\r\n                  <br />\r\n                  buildMaxHeap(arr)<br />\r\n                  &emsp;heap_size(arr) = length(arr)<br />\r\n                  &emsp;for i = length(arr)/2 to 1<br />\r\n                  &emsp;&emsp;MaxHeapify(arr,i)<br />\r\n                  <br />\r\n                  maxHeapify(arr,i)<br />\r\n                  &emsp;L = left(i)<br />\r\n                  &emsp;R = right(i)<br />\r\n                  &emsp;if L ? heap_size[arr] and arr[L] &gt; arr[i]<br />\r\n                  &emsp;&emsp;largest = L<br />\r\n                  &emsp;else<br />\r\n                  &emsp;&emsp;largest = i<br />\r\n                  &emsp;if R ? heap_size[arr] and arr[R] &gt; arr[largest]<br />\r\n                  &emsp;&emsp;largest = R<br />\r\n                  &emsp;if largest != i<br />\r\n                  &emsp;&emsp;swap arr[i] with arr[largest]<br />\r\n                  &emsp;MaxHeapify(arr,largest)<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeHeap></VisualizeHeap>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeapInfo;\r\n","import React from 'react'\r\n\r\nfunction InsertionSorting(array) {\r\n  const anim=[];\r\n  let arrlen = array.length;\r\n  for (let i=1;i<arrlen;i++) {\r\n    let key=array[i];\r\n    let j=i-1;\r\n    while (j>=0 && array[j]>key) {\r\n      anim.push([i,j]);\r\n      anim.push([i,j]);\r\n      anim.push([(j+1),array[j]]);\r\n      array[j+1] = array[j];\r\n      j--;\r\n    }\r\n    anim.push([i,j+1]);\r\n    anim.push([i,j+1]);\r\n    anim.push([(j+1),key]);\r\n    array[j+1] = key;\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default InsertionSorting\r\n","import React, { Component } from \"react\";\r\nimport InsertionSorting from \"./InsertionSort\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeInsertion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  insertionSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = InsertionSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [boidx, bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? \"#ffffff\" : \"#BF8FCC\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          boStyle.height = `${newHeight}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.insertionSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeInsertion from './VisualizeInsertion.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction InsertionInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Insertion Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Insertion is an in-place comparison-based sorting algorithm. Here, a sub-list is maintained which is always sorted.\r\n              For example, the lower part of an array is maintained to be sorted. An element which is to be 'insert'ed in this sorted sub-list, has to find its appropriate place and then it has to be inserted there.\r\n              Hence the name, insertion sort. The array is searched sequentially and unsorted items are moved and inserted into the sorted sub-list (in the same array).\r\n              This algorithm is not suitable for large data sets as its average and worst case complexity are of Ο(n2), where n is the number of items.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>Take the first element and consider it to be a sorted part(a single element is always sorted)</li>\r\n                <li>Now pick arr[1] and store it is a temporary variable</li>\r\n                <li>Start comparing the values of tmp with elements of the sorted part from the rear side</li>\r\n                <li>If tmp is less than the rear element, say arr[k], then shift arr[k] to k+1 index</li>\r\n                <li>This shifting will continue until the appropriate location is identified. Then, we will put the temporary element at the identified location</li>\r\n                <li>This will continue for all the elements, and we will have our desired sorted array in ascending order</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">InsertionSort(Array, n)<br />\r\n                  &emsp;for i = 1 to n-1<br />\r\n                  &emsp;&emsp;value = Array[i]<br />\r\n                  &emsp;&emsp;position = i<br />\r\n                  &emsp;&emsp;while (position &gt; 0 and Array[position-1] &gt; value)<br />\r\n                  &emsp;&emsp;&emsp;Array[position] = Array[position - 1]<br />\r\n                  &emsp;&emsp;&emsp;position = position - 1<br />\r\n                  &emsp;&emsp;Array[position] = value;<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeInsertion></VisualizeInsertion>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InsertionInfo;\r\n","import React from 'react'\r\n\r\nfunction MergeSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  const auxArray=array.slice();\r\n  sortingDivisor(array,0,array.length -1,auxArray,anim);\r\n  return anim;\r\n}\r\n\r\nfunction sortingDivisor(mArray,sIdx,eIdx,auxArray,anim) {\r\n  if(sIdx===eIdx) return;\r\n  const mIdx=Math.floor((sIdx+eIdx)/2);\r\n  sortingDivisor(auxArray,sIdx,mIdx,mArray,anim);\r\n  sortingDivisor(auxArray,mIdx+1,eIdx,mArray,anim);\r\n  performMerging(mArray,sIdx,mIdx,eIdx,auxArray,anim);\r\n}\r\n\r\nfunction performMerging(mArray,sIdx,mIdx,eIdx,auxArray,anim) {\r\n  let i=sIdx;\r\n  let j=sIdx;\r\n  let k=mIdx+1;\r\n  while(i<=mIdx && k<=eIdx)\r\n  {\r\n    anim.push([i,k]);\r\n    anim.push([i,k]);\r\n    if(auxArray[i]<=auxArray[k])\r\n    {\r\n      anim.push([j,auxArray[i]]);\r\n      mArray[j++]=auxArray[i++];\r\n    }\r\n    else\r\n    {\r\n      anim.push([j,auxArray[k]]);\r\n      mArray[j++]=auxArray[k++];\r\n    }\r\n  }\r\n  while(i<=mIdx)\r\n  {\r\n    anim.push([i,i]);\r\n    anim.push([i,i]);\r\n    anim.push([j,auxArray[i]]);\r\n    mArray[j++]=auxArray[i++];\r\n  }\r\n  while(k<=eIdx)\r\n  {\r\n    anim.push([k,k]);\r\n    anim.push([k,k]);\r\n    anim.push([j,auxArray[k]]);\r\n    mArray[j++]=auxArray[k++];\r\n  }\r\n}\r\n\r\nexport default MergeSorting\r\n","import React, { Component } from \"react\";\r\nimport MergeSorting from \"./MergeSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeMerge extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  mergeSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = MergeSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [boidx, bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          boStyle.height = `${newHeight}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.mergeSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeMerge from './VisualizeMerge.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction MergeInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Merge Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Merge sort is a sorting technique based on divide and conquer technique. With worst-case time complexity being Ο(n log n), it is one of the most respected algorithms.\r\n              Merge sort first divides the array into equal halves and then combines them in a sorted manner.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>For an array of length ‘N’, split it into two halves(left and right subarrays) as evenly as possible.</li>\r\n                <li>Now, let’s take the left subarray and repeat the step 1 till we have sub arrays of length 1.</li>\r\n                <li>Start to merge the elements of the subarrays in the order they were split with the smallest digit placed at the start.</li>\r\n                <li>Repeat step 3 till the whole left array is sorted and merged.</li>\r\n                <li>Repeat steps 2, 3 and 4 for the right subarray.</li>\r\n                <li>Now take the two sorted subarrays and pick the first elements or both the subarrays, compare them and place the smallest one at the start.</li>\r\n                <li>Repeat step 6 for the proceeding elements.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">Merge(LA, RA, A)<br />\r\n                  &emsp;nL = Length of LeftArray (LA)<br />\r\n                  &emsp;nR = Length of RightArray (RA)<br />\r\n                  &emsp;i = j = k = 0<br />\r\n                  &emsp;while(i&lt;nL and j&lt;nR)<br />\r\n                  &emsp;&emsp;if(LA[i] &lt;= RA[j])<br />\r\n                  &emsp;&emsp;&emsp;A[k] = LA[i]<br />\r\n                  &emsp;&emsp;&emsp;i = i+1<br />\r\n                  &emsp;&emsp;else<br />\r\n                  &emsp;&emsp;&emsp;A[k] = RA[j]<br />\r\n                  &emsp;&emsp;&emsp;j = j+1<br />\r\n                  &emsp;&emsp;k = k+1<br />\r\n                  &emsp;while(i&lt;nL)<br />\r\n                  &emsp;&emsp;A[k] = LA[i]<br />\r\n                  &emsp;&emsp;i = i+1<br />\r\n                  &emsp;&emsp;k = k+1<br />\r\n                  &emsp;while(j&lt;nR)<br />\r\n                  &emsp;&emsp;A[k] = RA[j]<br />\r\n                  &emsp;&emsp;j = j+1<br />\r\n                  &emsp;&emsp;k = k+1<br />\r\n                  <br />\r\n                  MergeSort(A)<br />\r\n                  &emsp;n = length of Array (A)<br />\r\n                  &emsp;if(n&lt;2)<br />\r\n                  &emsp;&emsp;return<br />\r\n                  &emsp;mid = n/2<br />\r\n                  &emsp;left = array of size(mid)<br />\r\n                  &emsp;right = array of size(n-mid)<br />\r\n                  &emsp;for i = 0 to mid-1<br />\r\n                  &emsp;&emsp;left[i] = A[i]<br />\r\n                  &emsp;for i = mid to n-1<br />\r\n                  &emsp;&emsp;right[i-mid] = A[i]<br />\r\n                  &emsp;MergeSort(left)<br />\r\n                  &emsp;MergeSort(right)<br />\r\n                  &emsp;Merge(left, right, A)<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeMerge></VisualizeMerge>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MergeInfo;\r\n","import React from 'react'\r\n\r\nfunction PigeonHoleSorting(inputArray) {\r\n  const anim=[];\r\n  var max = inputArray[0];\r\n  anim.push([0]);\r\n  anim.push([0]);\r\n  for (var i = 1; i < inputArray.length; i++) {\r\n    if (max < inputArray[i])\r\n      max = inputArray[i];\r\n      anim.push([i]);\r\n      anim.push([i]);\r\n  }\r\n\r\n  // Create pigeonholeArray filled with zeros\r\n  var pigeonholeArray = [];\r\n  for (var i = 0; i <= max; i++) {\r\n    pigeonholeArray.push(0);\r\n  }\r\n\r\n  // Iterate through inputArray and add 1's to pigeonholeArray\r\n  for (var i = 0; i < inputArray.length; i++) {\r\n    pigeonholeArray[inputArray[i]]++;\r\n  }\r\n\r\n  // Iterate through the pigeonholeArray and replace values in inputArray\r\n  var inputArrayIndex = 0;\r\n  for (var i = 0; i < pigeonholeArray.length; i++) {\r\n    // Add to inputArray until the current pigeonholeArray index is 0\r\n    while (pigeonholeArray[i]) {\r\n      inputArray[inputArrayIndex] = i;\r\n      pigeonholeArray[i]--;\r\n      inputArrayIndex++;\r\n      anim.push([inputArrayIndex-1]);\r\n      anim.push([inputArrayIndex-1]);\r\n      anim.push([inputArrayIndex-1,inputArray[inputArrayIndex-1]]);\r\n    }\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default PigeonHoleSorting\r\n","import React, { Component } from \"react\";\r\nimport PigeonHoleSorting from \"./PigeonHoleSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizePigeonHole extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  pigeonholeSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = PigeonHoleSorting(ax);\r\n    let arr = this.state.array;\r\n    for (let i = 0; i < 2 * arr.length; i++) {\r\n      const arrayBar1 = document.getElementsByClassName(\"array-bar\");\r\n      const [bfidx] = anim[i];\r\n      const boStyle = arrayBar1[bfidx].style;\r\n      const color = i % 2 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n      setTimeout(() => {\r\n        boStyle.backgroundColor = color;\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    for (let i = arr.length * 2; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if ((i - arr.length * 2) % 3 !== 2) {\r\n        const [bfidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const color = (i - arr.length * 2) % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          boStyle.height = `${newHeight}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.pigeonholeSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizePigeonHole from './VisualizePigeonHole.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction PigeonHoleInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">PigeonHole Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Pigeonhole sorting is a sorting algorithm that is suitable for sorting lists of elements where the number of elements and the number of possible key values are approximately the same.\r\n              It requires O(n + Range) time where n is number of elements in input array and ‘Range’ is number of possible values in array.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>Find minimum and maximum values in array. Let the minimum and maximum values be ‘min’ and ‘max’ respectively. Also find range as ‘max-min+1’.</li>\r\n                <li>Set up an array of initially empty “pigeonholes” the same size as of the range.</li>\r\n                <li>Visit each element of the array and then put each element in its pigeonhole. An element arr[i] is put in hole at index arr[i] – min.</li>\r\n                <li>Start the loop all over the pigeonhole array in order and put the elements from non- empty holes back into the original array.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">PigeonholeSort(a):<br />\r\n                  &emsp;minimum = min(a)<br />\r\n                  &emsp;maximum = max(a)<br />\r\n                  &emsp;size = maximum - minimum + 1<br />\r\n                  &emsp;pigeonholes = [0] * size<br />\r\n                  &emsp;for i in a:<br />\r\n                  &emsp;&emsp;pigeonholes[i - minimum] += 1<br />\r\n                  &emsp;j = 0<br />\r\n                  &emsp;for count in range(size):<br />\r\n                  &emsp;&emsp;while pigeonholes[count] &gt; 0:<br />\r\n                  &emsp;&emsp;&emsp;pigeonholes[count] -= 1<br />\r\n                  &emsp;&emsp;&emsp;a[j] = count + minimum<br />\r\n                  &emsp;&emsp;&emsp;j += 1<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizePigeonHole></VisualizePigeonHole>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PigeonHoleInfo;\r\n","import React from 'react'\r\n\r\nfunction QuickSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  for(let i=0;i<array.length;++i)\r\n  {\r\n    console.log(array[i]);\r\n  }\r\n  sortingDivisor(array,0,array.length -1,anim);\r\n  console.log(\"Sorted\");\r\n  for(let i=0;i<array.length;++i)\r\n  {\r\n    console.log(array[i]);\r\n  }\r\n  return anim;\r\n}\r\n\r\nfunction sortingDivisor(mArray,sIdx,eIdx,anim) {\r\n  if(sIdx>=eIdx) {\r\n    return;\r\n  }\r\n  const pi = partition(mArray,sIdx,eIdx,anim)\r\n  sortingDivisor(mArray,sIdx,pi-1,anim);\r\n  sortingDivisor(mArray,pi+1,eIdx,anim);\r\n}\r\n\r\nfunction partition(mArray,sIdx,eIdx,anim) {\r\n  let pivot = mArray[eIdx];\r\n  let i = sIdx-1;\r\n  for(let j=sIdx; j<=eIdx-1;j++)\r\n  {\r\n    if(mArray[j] < pivot) {\r\n      i++;\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      [mArray[i],mArray[j]]=[mArray[j],mArray[i]];\r\n      anim.push([i,mArray[i],j,mArray[j]]);\r\n    }\r\n    else if(i>=0) {\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,mArray[i],j,mArray[j]]);\r\n    }\r\n  }\r\n  i++;\r\n  anim.push([i,eIdx,sIdx,eIdx]);\r\n  anim.push([i,eIdx,sIdx,eIdx]);\r\n  [mArray[i],mArray[eIdx]]=[mArray[eIdx],mArray[i]];\r\n  anim.push([i,mArray[i],eIdx,mArray[eIdx]]);\r\n  return i;\r\n}\r\n\r\nexport default QuickSorting\r\n","import React, { Component } from \"react\";\r\nimport QuickSorting from \"./QuickSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeQuick extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  quickSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = QuickSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [bfidx, btidx, low, high] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const lbStyle = arrayBar[high].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.quickSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeQuick from './VisualizeQuick.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction QuickInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Quick Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Quicksort is the widely used sorting algorithm that makes n log n comparisons in average case for sorting an array of n elements. It is a faster and highly efficient sorting algorithm.\r\n              This algorithm follows the divide and conquer approach. Divide and conquer is a technique of breaking down the algorithms into subproblems, then solving the subproblems, and combining the results back together to solve the original problem.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>We are given with an input array</li>\r\n                <li>Choose pivot, here we are choosing the last element as our pivot</li>\r\n                <li>Now partition the array as per pivot</li>\r\n                <ol>\r\n                  <li>Keep a partitioned index say p and initialize it to -1</li>\r\n                  <li>Iterate through every element in the array except the pivot</li>\r\n                  <li>If an element is less than the pivot element then increment p and swap the elements at index p with the element at index i.</li>\r\n                  <li>Once all the elements are traversed, swap pivot with element present at p+1 as this will the same position as in the sorted array</li>\r\n                  <li>Now return the pivot index</li>\r\n                </ol>\r\n                <li>Once partitioned, now make 2 calls on quicksort</li>\r\n                <ol>\r\n                  <li>One from beg to p-1</li>\r\n                  <li>Other from p+1 to n-1</li>\r\n                </ol>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">QuickSort(arr, beg, end)<br />\r\n                  &emsp;if (beg &lt; end)<br />\r\n                  &emsp;&emsp;pivotIndex = partition(arr,beg, end)<br />\r\n                  &emsp;&emsp;quickSort(arr, beg, pivotIndex)<br />\r\n                  &emsp;&emsp;quickSort(arr, pivotIndex + 1, end)<br />\r\n                  <br />\r\n                  &emsp;partition(arr, beg, end)<br />\r\n                  &emsp;&emsp;set end as pivotIndex<br />\r\n                  &emsp;&emsp;pIndex = beg - 1<br />\r\n                  &emsp;&emsp;for i = beg to end-1<br />\r\n                  &emsp;&emsp;if arr[i] &lt; pivot<br />\r\n                  &emsp;&emsp;&emsp;swap arr[i] and arr[pIndex]<br />\r\n                  &emsp;&emsp;&emsp;pIndex++<br />\r\n                  &emsp;&emsp;swap pivot and arr[pIndex+1]<br />\r\n                  &emsp;return pIndex + 1<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeQuick></VisualizeQuick>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuickInfo;\r\n","import React from 'react';\r\n\r\nfunction getMax(arr) {\r\n  let max = 0;\r\n  for (let num of arr) {\r\n    if (max < num.toString().length) {\r\n      max = num.toString().length\r\n    }\r\n  }\r\n  return max\r\n}\r\n\r\n\r\nfunction getPosition(num, place) {\r\n  return  Math.floor(Math.abs(num)/Math.pow(10,place))% 10\r\n}\r\n\r\n\r\nfunction RadixSorting(arr) {\r\n  const anim = [];\r\n  const max = getMax(arr);\r\n  for (let i = 0; i < max; i++) {\r\n    let buckets = Array.from({ length: 10 }, () => [ ])\r\n    for (let j = 0; j < arr.length; j++) {\r\n      anim.push([j]);\r\n      anim.push([j]);\r\n      buckets[getPosition(arr[ j ], i)].push(arr[ j ]);\r\n    }\r\n    arr = [ ].concat(...buckets);\r\n    for(let k=0;k<arr.length;++k)\r\n    {\r\n      anim.push([k,arr[k]]);\r\n    }\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default RadixSorting;\r\n","import React, { Component } from \"react\";\r\nimport RadixSorting from \"./RadixSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeRadix extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  radixSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = RadixSorting(ax);\r\n    let fx = 0,\r\n      sx = 0;\r\n    let o = 0;\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (fx < this.state.array.length * 2) {\r\n        const [boidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const color = i % 2 === o % 2 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n        fx++;\r\n      } else if (sx < this.state.array.length) {\r\n        const [boidx, newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          boStyle.height = `${newHeight}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n        sx++;\r\n        o++;\r\n      } else {\r\n        fx = 1;\r\n        sx = 0;\r\n        const [boidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const color = i % 2 === o % 2 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.radixSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeRadix from './VisualizeRadix.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction RadixInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Radix Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">Radix sort is a sorting algorithm that sorts the elements by first grouping the individual digits of the same place value. Then, sort the elements according to their increasing/decreasing order.\r\n              Suppose, we have an array of 8 elements. First, we will sort elements based on the value of the unit place. Then, we will sort elements based on the value of the tenth place. This process goes on until the last significant place.\r\n              Since radix sort is a non-comparative algorithm, it has advantages over comparative sorting algorithms.\r\n              For the radix sort that uses counting sort as an intermediate stable sort, the time complexity is O(d(n+k)).\r\n              Here, d is the number cycle and O(n+k) is the time complexity of counting sort.\r\n              Thus, radix sort has linear time complexity which is better than O(nlog n) of comparative sorting algorithms.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>First, we have to find the largest element (suppose max) from the given array. Suppose 'x' be the number of digits in max. The 'x' is calculated because we need to go through the significant places of all elements.</li>\r\n                <li>After that, go through one by one each significant place. Here, we have to use any stable sorting algorithm to sort the digits of each significant place.</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">getMax(arr, n)  <br />\r\n                  &emsp;max = arr[0]  <br />\r\n                  &emsp;for(int i = 1; i&lt;n; i++)<br />\r\n                  &emsp;&emsp;if(a[i] &gt; max)  <br />\r\n                  &emsp;&emsp;&emsp;max = a[i]  <br />\r\n                  &emsp;return max  <br />\r\n                  <br />\r\n                  RadixSort(arr, n) <br />\r\n                  &emsp;max = getMax(arr, n)<br />\r\n                  &emsp;for (int place = 1; max / place &gt; 0; place *= 10)  <br />\r\n                  &emsp;&emsp;CountingSort(arr, n, place)   <br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeRadix></VisualizeRadix>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadixInfo;\r\n","import React from 'react'\r\n\r\nfunction SelectionSorting(array) {\r\n  const anim=[];\r\n  let len = array.length;\r\n  for (let i = 0; i < len; i++) {\r\n    let min = i;\r\n    for (let j = i + 1; j < len; j++) {\r\n      anim.push([min,j]);\r\n      anim.push([min,j]);\r\n      anim.push([min,array[min],j,array[j]]);\r\n      if (array[min] > array[j])\r\n      {\r\n        min = j;\r\n      }\r\n    }\r\n    if (min !== i) {\r\n      let tmp = array[i];\r\n      array[i] = array[min];\r\n      array[min] = tmp;\r\n    }\r\n    anim.push([i,min]);\r\n    anim.push([i,min]);\r\n    anim.push([i,array[i],min,array[min]]);\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default SelectionSorting\r\n","import React, { Component } from \"react\";\r\nimport SelectionSorting from \"./SelectionSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  selectionSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = SelectionSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [boidx, bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight, bsidx, newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          arrayBar[bsidx].innerHTML = newHeight2;\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.selectionSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeSelection from './VisualizeSelection.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction SelectionInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Selection Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Selection sort is a simple sorting algorithm. This sorting algorithm is an in-place comparison-based algorithm in which the list is divided into two parts, the sorted part at the left end and the unsorted part at the right end. Initially, the sorted part is empty and the unsorted part is the entire list.\r\n              The smallest element is selected from the unsorted array and swapped with the leftmost element, and that element becomes a part of the sorted array. This process continues moving unsorted array boundary by one element to the right.\r\n              This algorithm is not suitable for large data sets as its average and worst case complexities are of Ο(n2), where n is the number of items.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>Set min  index to the first index of an unsorted array</li>\r\n                <li>Iterate the entire unsorted array and do the comparison with min</li>\r\n                <li>If element present at the min is greater than the element present at the current index then update min with a current index</li>\r\n                <li>Once the iteration is complete, swap the element of min index with the first element of the unsorted part</li>\r\n                <li>For descending order, instead of maintaining the smallest element index, maintain the largest element index</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">SelectionSort (Array, n)<br />\r\n                  &emsp;for i = 0 to n-2<br />\r\n                  &emsp;&emsp;i_min = i<br />\r\n                  &emsp;&emsp;for j = i+1 to n-1<br />\r\n                  &emsp;&emsp;if Array[j] &lt; Array[i_min]<br />\r\n                  &emsp;&emsp;&emsp;i_min = j<br />\r\n                  &emsp;&emsp;Swap(Array[j], Array[i_min])<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeSelection></VisualizeSelection>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionInfo;\r\n","function ShellSorting(arr) {\r\n  const anim = [];\r\n  var increment = Math.floor(arr.length / 2);\r\n  while (increment > 0) {\r\n    for (let i = increment; i < arr.length; i++) {\r\n      var j = i;\r\n      var temp = arr[i];\r\n      while (j >= increment && arr[j - increment] > temp && j < arr.length) {\r\n        arr[j] = arr[j - increment];\r\n        anim.push([j - increment, j]);\r\n        anim.push([j - increment, j]);\r\n        anim.push([j, arr[j]]);\r\n        j = j - increment;\r\n      }\r\n\r\n      arr[j] = temp;\r\n      anim.push([i, j]);\r\n      anim.push([i, j]);\r\n      anim.push([j, arr[j]]);\r\n    }\r\n\r\n    if (increment === 2) {\r\n      increment = 1;\r\n    } else {\r\n      increment = parseInt(increment * 5 / 11);\r\n    }\r\n  }\r\n  return anim;\r\n}\r\n\r\nexport default ShellSorting\r\n","import React, { Component } from \"react\";\r\nimport ShellSorting from \"./ShellSort.js\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../sortingVisualizer.css\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 2,\r\n    label: \"Slow\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Medium\",\r\n  },\r\n  {\r\n    value: 8,\r\n    label: \"Fast\",\r\n  },\r\n];\r\n\r\nexport default class VisualizeShell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      abar: \"15\",\r\n      time: \"1200\",\r\n      speed: \"5\",\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  checkAll() {\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBar.length; ++i) {\r\n      const barStyle = arrayBar[i].style;\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = \"#24C921\";\r\n        barStyle.color = \"rgba(0,0,0,1)\";\r\n      }, (i * this.state.time) / this.state.speed);\r\n    }\r\n    setTimeout(() => {\r\n      this.state.array.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      this.setState({ disabled: false });\r\n    }, (this.state.time / this.state.speed) * arrayBar.length);\r\n  }\r\n\r\n  resetArray() {\r\n    const array2 = [];\r\n    const array = [];\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(40, 400));\r\n    }\r\n    this.setState({ array2 });\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#8DD9CC\";\r\n        arrayBar[i].innerHTML = array[i];\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = this.state.abar * 36 + 80 + \"px\";\r\n  }\r\n\r\n  shellSort() {\r\n    const ax = this.state.array.slice(0);\r\n    const anim = ShellSorting(ax);\r\n    for (let i = 0; i <= anim.length; i++) {\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      if (i == anim.length) {\r\n        setTimeout(() => {\r\n          this.checkAll();\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else if (i % 3 !== 2) {\r\n        const [bfidx, btidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const color = i % 3 === 0 ? \"#19D9FD\" : \"#ffbf00\";\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      } else {\r\n        const [boidx, newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          arrayBar[boidx].innerHTML = newHeight;\r\n          boStyle.height = `${newHeight}px`;\r\n        }, (i * this.state.time) / this.state.speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  startSorting() {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    this.shellSort();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.state.abar = newValue;\r\n      this.setState();\r\n      this.resetArray();\r\n    };\r\n\r\n    const speedChange = (e, newValue) => {\r\n      let obj = {};\r\n      obj[e.target.name] = e.target.value;\r\n      this.state.speed = newValue;\r\n      this.setState(e);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => this.resetArray()}\r\n            disabled={this.state.disabled}\r\n            id=\"sortBtn\"\r\n          >\r\n            New array\r\n          </Button>\r\n          <a>Array Bar:</a>\r\n          <Slider\r\n            value={this.state.abar}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={4}\r\n            max={20}\r\n            id=\"slid1\"\r\n            disabled={this.state.disabled}\r\n          />\r\n          <a>Speed:</a>\r\n          <Slider\r\n            value={this.state.speed}\r\n            onChange={speedChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n            valueLabelDisplay=\"off\"\r\n            min={1}\r\n            max={10}\r\n            id=\"slid2\"\r\n            marks={marks}\r\n            disabled={this.state.disabled}\r\n          />\r\n          <Button\r\n            disabled={this.state.disabled}\r\n            onClick={() => this.startSorting()}\r\n            id=\"sortMainBtn\"\r\n          >\r\n            Run Sorting\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <div className=\"tb\"></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../sortInfo.css';\r\nimport VisualizeShell from './VisualizeShell.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction ShellInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Shell Sort</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              ShellSort is mainly a variation of Insertion Sort. In insertion sort, we move elements only one position ahead. When an element has to be moved far ahead, many movements are involved.\r\n              The idea of shellSort is to allow exchange of far items. In shellSort, we make the array h-sorted for a large value of h. We keep reducing the value of h until it becomes 1. An array is said to be h-sorted if all sublists of every h’th element is sorted.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Pseudocode:</b>\r\n              <ol>\r\n                <li>Initialize the gap size i.e. h</li>\r\n                <li>Divide the array into sub-arrays each having interval of h</li>\r\n                <li>Sort the sub-arrays with insertion sort</li>\r\n                <li>Reduce the value of h</li>\r\n                <li>Repeat the above steps until the array is sorted</li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\"><b>Algorithm:</b><br />\r\n              <div className=\"codeBlock\">\r\n                <code className=\"codeText\">ShellSort(arr, n)<br />\r\n                  &emsp;for (gap = n/2; gap &gt; 0; gap /= 2)<br />\r\n                  &emsp;&emsp;for (i = gap; i &lt; n; i += 1)<br />\r\n                  &emsp;&emsp;&emsp;temp = arr[i];   <br />\r\n                  &emsp;&emsp;&emsp;for (j = i; j &gt;= gap &#38;&#38; arr[j - gap] &gt; temp; j -= gap)<br />\r\n                  &emsp;&emsp;&emsp;&emsp;arr[j] = arr[j - gap];<br />\r\n                  &emsp;&emsp;arr[j] = temp;<br />\r\n                </code>\r\n              </div>\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <VisualizeShell></VisualizeShell>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShellInfo;\r\n","import React, { Component } from 'react';\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n  render() {\r\n    const { \r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      row,\r\n      direction,\r\n      totaldistance,\r\n      distance,\r\n      weight,\r\n      heuristicValue,\r\n    } = this.props;\r\n    const extraClassName = isFinish\r\n      ? 'node-finish'\r\n      : isStart\r\n        ? 'node-start'\r\n        : isWall\r\n          ? 'node-wall'\r\n          : '';\r\n    return (\r\n      <div\r\n        id={`node-${row}-${col}`}\r\n        className={`node ${extraClassName}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp()}></div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Node from \"../nodeUtils/Node.jsx\";\r\nimport { asearch, getNodesInShortestPathOrderA } from \"./asearch.js\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../PathfindingVisualizer.css\";\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 5;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      grid: [],\r\n      mouseIsPressed: false,\r\n      disabled: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  animateAsearch(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    this.setState({ disabled: true });\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, 40 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark-ca\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark\";\r\n      }, 50 * 0);\r\n    }\r\n    for (let i = 1; i < nodesInShortestPathOrder.length - 1; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        const node2 = nodesInShortestPathOrder[i + 1];\r\n        var last_row = node.row;\r\n        var last_col = node.col;\r\n        var currRow = node2.row;\r\n        var currCol = node2.col;\r\n        if (currRow === last_row - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-up\";\r\n        } else if (currRow === last_row + 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-down\";\r\n        } else if (currCol === last_col - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-left\";\r\n        } else {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-right\";\r\n        }\r\n      }, 50 * i);\r\n    }\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark-nf\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark\";\r\n      }, 50 * (nodesInShortestPathOrder.length - 1));\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ disabled: false });\r\n    }, 50 * (nodesInShortestPathOrder.length + 3));\r\n  }\r\n\r\n  visualizeASearch() {\r\n    const { grid } = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const vnio = asearch(grid, startNode, finishNode);\r\n    for (let i = 0; i < vnio.length; i++) {\r\n      grid[vnio[i].row][vnio[i].col].distance = vnio[i].distance;\r\n    }\r\n    for (let i = 0; i <= 20; i++) {\r\n      for (let j = 0; j <= 39; ++j) {\r\n        if (grid[i][j].distance === Infinity) {\r\n          grid[i][j].distance = -1;\r\n        }\r\n      }\r\n    }\r\n    const sp = getNodesInShortestPathOrderA(grid, finishNode);\r\n    sp.reverse();\r\n    this.animateAsearch(vnio, sp);\r\n  }\r\n\r\n  resetMaze() {\r\n    this.componentDidMount();\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (\r\n                    !((row === 10 && col === 5) || (row === 10 && col === 35))\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState(this.state);\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={true}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={true}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createRandomMaze() {\r\n    this.rM();\r\n    let count = 300;\r\n    let i = 0;\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  i += 1;\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count > 0\r\n                  ) {\r\n                    let ch = randomIntFromInterval(0, 2);\r\n                    if (ch === 1) {\r\n                      const newGrid = getNewGridWithWallToggledOn(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node node-wall\";\r\n                      this.setState({ grid: newGrid });\r\n                      count -= 1;\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={true}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    } else {\r\n                      const newGrid = getNewGridWithWallToggledOff(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node\";\r\n                      this.setState({ grid: newGrid });\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={false}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    }\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count <= 0\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  rM() {\r\n    this.setState(this.state);\r\n    var id = window.setTimeout(function () {}, 0);\r\n    while (id--) {\r\n      window.clearTimeout(id); // will do nothing if no timeout with id is present\r\n    }\r\n    window.clearTimeout(id);\r\n    this.resetMaze();\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  createVerticalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 4 === 0 && row !== 19) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 2 === 0 && col % 4 !== 0 && row !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    row === START_NODE_ROW &&\r\n                    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createHorizontalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    let i = 1;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 4 === 0 && col !== 38) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 2 === 0 && row % 4 !== 0 && col !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  startVisualization() {\r\n    this.visualizeASearch();\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.startVisualization()}\r\n          id=\"pathMainBtn\"\r\n        >\r\n          Start Visualization\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.rM()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Reset Board\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createVerticalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Vertical Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createHorizontalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Horizontal Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createRandomMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Random Maze\r\n        </Button>\r\n        <hr></hr>\r\n        <div className=\"grid\" id=\"m\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} id=\"n\">\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      color=\"white\"\r\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) =>\r\n                        this.handleMouseEnter(row, col)\r\n                      }\r\n                      onMouseUp={() => this.handleMouseUp()}\r\n                      row={row}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr></hr>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 21; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 40; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n    direction: null,\r\n    totaldistance: 0,\r\n    weight: 0,\r\n    heuristicValue:\r\n      Math.abs(row - FINISH_NODE_ROW) + Math.abs(col - FINISH_NODE_COL),\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (\r\n    row === START_NODE_ROW &&\r\n    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n  ) {\r\n    return newGrid;\r\n  }\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithWallToggledOn = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithWallToggledOff = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: false,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithStart = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isStart: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithEnd = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isFinish: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","export function asearch(grid, start, target) {\r\n  if (!start || !target || start === target) {\r\n    return false;\r\n  }\r\n  const ol = [];\r\n  ol.push(start);\r\n  const vnio = [];\r\n  vnio.push(start);\r\n  let curr = start;\r\n  curr.distance = 0;\r\n  let f = 1;\r\n  while (ol.length !== 0 && f === 1) {\r\n    let nos;\r\n    let td = 100;\r\n    if (curr === target) {\r\n      break;\r\n    }\r\n    for (let i = 0; i < vnio.length; ++i) {\r\n      if (vnio[i].row === 20 && vnio[i].col === 48) {\r\n\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let cha = 1;\r\n        let chc = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].row === 20 && vnio[i].col === 0) {\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let cha = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].row === 0 && vnio[i].col === 48) {\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let chb = 1;\r\n        let chc = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].row === 0 && vnio[i].col === 0) {\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let chb = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].row === 20) {\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let cha = 1;\r\n        let chc = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].row === 0) {\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let chb = 1;\r\n        let chc = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].col === 48) {\r\n\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let cha = 1;\r\n        let chb = 1;\r\n        let chc = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else if (vnio[i].col === 0) {\r\n\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let cha = 1;\r\n        let chb = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n      else {\r\n        let a = grid[vnio[i].row - 1][vnio[i].col];\r\n        let b = grid[vnio[i].row + 1][vnio[i].col];\r\n        let c = grid[vnio[i].row][vnio[i].col - 1];\r\n        let d = grid[vnio[i].row][vnio[i].col + 1];\r\n        let cha = 1;\r\n        let chb = 1;\r\n        let chc = 1;\r\n        let chd = 1;\r\n        for (let j = 0; j < vnio.length; ++j) {\r\n          if (vnio[j] === a) {\r\n            cha = 0;\r\n          }\r\n          if (vnio[j] === b) {\r\n            chb = 0;\r\n          }\r\n          if (vnio[j] === c) {\r\n            chc = 0;\r\n          }\r\n          if (vnio[j] === d) {\r\n            chd = 0;\r\n          }\r\n        }\r\n        if (cha === 1 && !a.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(a.row - target.row) + Math.abs(a.col - target.col))))) {\r\n          nos = a;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chb === 1 && !b.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(b.row - target.row) + Math.abs(b.col - target.col))))) {\r\n          nos = b;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chc === 1 && !c.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(c.row - target.row) + Math.abs(c.col - target.col))))) {\r\n          nos = c;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n        if (chd === 1 && !d.isWall && ((!nos) || (td + (Math.abs(nos.row - target.row) + Math.abs(nos.col - target.col))) >= (vnio[i].distance + 1 + (Math.abs(d.row - target.row) + Math.abs(d.col - target.col))))) {\r\n          nos = d;\r\n          td = vnio[i].distance + 1;\r\n        }\r\n      }\r\n    }\r\n    if (!nos) {\r\n      break;\r\n    }\r\n    else {\r\n      nos.distance = (td);\r\n      curr = nos;\r\n    }\r\n    vnio.push(curr);\r\n  }\r\n  return vnio;\r\n}\r\n\r\nexport function getNodesInShortestPathOrderA(grid, finishNode) {\r\n  let curr = finishNode;\r\n  const sp = [];\r\n  if (curr.distance === -1) {\r\n    return sp;\r\n  }\r\n  while (curr.distance !== 0) {\r\n    if (curr.row === 0 && curr.col === 0) {\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      if (!b.isWall && b.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.row === 0 && curr.col === 48) {\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      if (!b.isWall && (b.distance === curr.distance - 1)) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.row === 20 && curr.col === 0) {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.row === 20 && curr.col === 48) {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.row === 0) {\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      if (!b.isWall && b.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.row === 20) {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.col === 0) {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!b.isWall && b.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n    else if (curr.col === 48) {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!b.isWall && b.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n    }\r\n    else {\r\n      let a = grid[curr.row - 1][curr.col];\r\n      let b = grid[curr.row + 1][curr.col];\r\n      let c = grid[curr.row][curr.col - 1];\r\n      let d = grid[curr.row][curr.col + 1];\r\n      if (!a.isWall && a.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = a;\r\n        continue;\r\n      }\r\n      else if (!b.isWall && b.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = b;\r\n        continue;\r\n      }\r\n      else if (!c.isWall && c.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = c;\r\n        continue;\r\n      }\r\n      else if (!d.isWall && d.distance === curr.distance - 1) {\r\n        sp.push(curr);\r\n        curr = d;\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  sp.push(curr);\r\n  return sp;\r\n}\r\n","import { Container, Row, Col } from 'react-bootstrap';\r\nimport '../pathInfo.css';\r\nimport PathfindingVisualizer from './PathfindingVisualizer.jsx';\r\n\r\n\r\nfunction AStarInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">A* Search</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              A* algorithm works based on heuristic methods and this helps achieve optimality. A* is a different form of the best-first algorithm. Optimality empowers an algorithm to find the best possible solution to a problem. Such algorithms also offer completeness, if there is any solution possible to an existing problem, the algorithm will definitely find it.\r\n              When A* enters into a problem, firstly it calculates the cost to travel to the neighbouring nodes and chooses the node with the lowest cost.\r\n              The heuristic value has an important role in the efficiency of the A* algorithm. To find the best solution, you might have to use different heuristic function\r\n              according to the type of the problem. However, the creation of these functions is a difficult task, and this is the basic problem we face in AI.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <PathfindingVisualizer></PathfindingVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AStarInfo;\r\n","export function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrderD(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Node from \"../nodeUtils/Node.jsx\";\r\nimport { dijkstra, getNodesInShortestPathOrderD } from \"./dijkstra.js\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport \"../PathfindingVisualizer.css\";\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 5;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      grid: [],\r\n      mouseIsPressed: false,\r\n      disabled: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, 40 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark-ca\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark\";\r\n      }, 50 * 0);\r\n    }\r\n    for (let i = 1; i < nodesInShortestPathOrder.length - 1; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        const node2 = nodesInShortestPathOrder[i + 1];\r\n        var last_row = node.row;\r\n        var last_col = node.col;\r\n        var currRow = node2.row;\r\n        var currCol = node2.col;\r\n        if (currRow === last_row - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-up\";\r\n        } else if (currRow === last_row + 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-down\";\r\n        } else if (currCol === last_col - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-left\";\r\n        } else {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-right\";\r\n        }\r\n      }, 50 * i);\r\n    }\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark-nf\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark\";\r\n      }, 50 * (nodesInShortestPathOrder.length - 1));\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ disabled: false });\r\n    }, 50 * (nodesInShortestPathOrder.length + 3));\r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const { grid } = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    for (let i = 0; i <= 20; i++) {\r\n      for (let j = 0; j <= 39; ++j) {\r\n        grid[i][j].distance = Infinity;\r\n      }\r\n    }\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderD(finishNode);\r\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n  resetMaze() {\r\n    this.componentDidMount();\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (\r\n                    !((row === 10 && col === 5) || (row === 10 && col === 35))\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState(this.state);\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={true}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={true}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createRandomMaze() {\r\n    this.rM();\r\n    let count = 300;\r\n    let i = 0;\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  i += 1;\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count > 0\r\n                  ) {\r\n                    let ch = randomIntFromInterval(0, 2);\r\n                    if (ch === 1) {\r\n                      const newGrid = getNewGridWithWallToggledOn(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node node-wall\";\r\n                      this.setState({ grid: newGrid });\r\n                      count -= 1;\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={true}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    } else {\r\n                      const newGrid = getNewGridWithWallToggledOff(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node\";\r\n                      this.setState({ grid: newGrid });\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={false}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    }\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count <= 0\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  rM() {\r\n    this.setState(this.state);\r\n    var id = window.setTimeout(function () {}, 0);\r\n    while (id--) {\r\n      window.clearTimeout(id); // will do nothing if no timeout with id is present\r\n    }\r\n    window.clearTimeout(id);\r\n    this.resetMaze();\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  createVerticalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 4 === 0 && row !== 19) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 2 === 0 && col % 4 !== 0 && row !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    row === START_NODE_ROW &&\r\n                    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createHorizontalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    let i = 1;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 4 === 0 && col !== 38) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 2 === 0 && row % 4 !== 0 && col !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  startVisualization() {\r\n    this.visualizeDijkstra();\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.startVisualization()}\r\n          id=\"pathMainBtn\"\r\n        >\r\n          Start Visualization\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.rM()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Reset Board\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createVerticalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Vertical Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createHorizontalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Horizontal Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createRandomMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Random Maze\r\n        </Button>\r\n        <hr></hr>\r\n        <div className=\"grid\" id=\"m\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} id=\"n\">\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      color=\"white\"\r\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) =>\r\n                        this.handleMouseEnter(row, col)\r\n                      }\r\n                      onMouseUp={() => this.handleMouseUp()}\r\n                      row={row}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr></hr>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 21; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 40; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n    direction: null,\r\n    totaldistance: 0,\r\n    weight: 0,\r\n    heuristicValue:\r\n      Math.abs(row - FINISH_NODE_ROW) + Math.abs(col - FINISH_NODE_COL),\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (\r\n    row === START_NODE_ROW &&\r\n    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n  ) {\r\n    return newGrid;\r\n  }\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithWallToggledOn = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithWallToggledOff = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: false,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithStart = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isStart: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithEnd = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isFinish: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../pathInfo.css';\r\nimport PathfindingVisualizer from './PathfindingVisualizer.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction BFSInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Breadth First Search</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Breadth first search is a graph traversal algorithm that starts traversing the graph from root node and explores all the neighbouring nodes. Then, it selects the nearest node and explore all the unexplored nodes. The algorithm follows the same process for each of the nearest node until it finds the goal.\r\n              The algorithm of breadth first search is given below. The algorithm starts with examining the node A and all of its neighbours. In the next step, the neighbours of the nearest node of A are explored and process continues in the further steps. The algorithm explores all neighbours of all the nodes and ensures that each node is visited exactly once and no node is visited twice.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <PathfindingVisualizer></PathfindingVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BFSInfo;\r\n","export function dfs(grid, startNode, finishNode) {\r\n    if (!startNode || !finishNode || startNode === finishNode) {\r\n        return false;\r\n    }\r\n    let unvisitedNodes = [];\r\n    let visitedNodesInOrder = [];\r\n    unvisitedNodes.push(startNode);\r\n    while (unvisitedNodes.length !== 0) {\r\n        let closestNode = unvisitedNodes.shift();\r\n        if (closestNode.isWall) continue;\r\n        if (closestNode === finishNode) return visitedNodesInOrder;\r\n        visitedNodesInOrder.push(closestNode);\r\n        closestNode.isVisited = true;\r\n        let unvisitedNeighbours = getUnvisitedNeighbours(closestNode, grid);\r\n        for (let unvisitedNeighbour of unvisitedNeighbours) {\r\n            unvisitedNeighbour.previousNode = closestNode;\r\n            unvisitedNodes.unshift(unvisitedNeighbour);\r\n        }\r\n    }\r\n    return visitedNodesInOrder;\r\n}\r\n\r\nfunction getUnvisitedNeighbours(node, grid) {\r\n    let neighbours = [];\r\n    let { row, col } = node;\r\n    if (col !== 0) neighbours.push(grid[row][col - 1]);\r\n    if (row !== 0) neighbours.push(grid[row - 1][col]);\r\n    if (col !== grid[0].length - 1) neighbours.push(grid[row][col + 1]);\r\n    if (row !== grid.length - 1) neighbours.push(grid[row + 1][col]);\r\n    return neighbours.filter((neighbour) => !neighbour.isVisited);\r\n}\r\n\r\nexport function getNodesInShortestPathOrderDFS(finishNode) {\r\n    let nodesInShortestPathOrder = [];\r\n    let currentNode = finishNode;\r\n    while (currentNode !== null) {\r\n        nodesInShortestPathOrder.unshift(currentNode);\r\n        currentNode = currentNode.previousNode;\r\n    }\r\n    return nodesInShortestPathOrder;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Node from \"../nodeUtils/Node.jsx\";\r\nimport { dfs, getNodesInShortestPathOrderDFS } from \"./dfs.js\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../PathfindingVisualizer.css\";\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 5;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      grid: [],\r\n      mouseIsPressed: false,\r\n      disabled: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  animateDFS(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, 40 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark-ca\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark\";\r\n      }, 50 * 0);\r\n    }\r\n    for (let i = 1; i < nodesInShortestPathOrder.length - 1; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        const node2 = nodesInShortestPathOrder[i + 1];\r\n        var last_row = node.row;\r\n        var last_col = node.col;\r\n        var currRow = node2.row;\r\n        var currCol = node2.col;\r\n        if (currRow === last_row - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-up\";\r\n        } else if (currRow === last_row + 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-down\";\r\n        } else if (currCol === last_col - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-left\";\r\n        } else {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-right\";\r\n        }\r\n      }, 50 * i);\r\n    }\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark-nf\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark\";\r\n      }, 50 * (nodesInShortestPathOrder.length - 1));\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ disabled: false });\r\n    }, 50 * (nodesInShortestPathOrder.length + 3));\r\n  }\r\n\r\n  visualizeDFS() {\r\n    const { grid } = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const visitedNodesInOrder = dfs(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderDFS(finishNode);\r\n    this.animateDFS(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n  resetMaze() {\r\n    this.componentDidMount();\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (\r\n                    !((row === 10 && col === 5) || (row === 10 && col === 35))\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState(this.state);\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={true}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={true}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createRandomMaze() {\r\n    this.rM();\r\n    let count = 300;\r\n    let i = 0;\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  i += 1;\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count > 0\r\n                  ) {\r\n                    let ch = randomIntFromInterval(0, 2);\r\n                    if (ch === 1) {\r\n                      const newGrid = getNewGridWithWallToggledOn(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node node-wall\";\r\n                      this.setState({ grid: newGrid });\r\n                      count -= 1;\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={true}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    } else {\r\n                      const newGrid = getNewGridWithWallToggledOff(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node\";\r\n                      this.setState({ grid: newGrid });\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={false}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    }\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count <= 0\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  rM() {\r\n    this.setState(this.state);\r\n    var id = window.setTimeout(function () {}, 0);\r\n    while (id--) {\r\n      window.clearTimeout(id); // will do nothing if no timeout with id is present\r\n    }\r\n    window.clearTimeout(id);\r\n    this.resetMaze();\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  createVerticalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 4 === 0 && row !== 19) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 2 === 0 && col % 4 !== 0 && row !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    row === START_NODE_ROW &&\r\n                    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createHorizontalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    let i = 1;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 4 === 0 && col !== 38) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 2 === 0 && row % 4 !== 0 && col !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  startVisualization() {\r\n    this.visualizeDFS();\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.startVisualization()}\r\n          id=\"pathMainBtn\"\r\n        >\r\n          Start Visualization\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.rM()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Reset Board\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createVerticalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Vertical Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createHorizontalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Horizontal Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createRandomMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Random Maze\r\n        </Button>\r\n        <hr></hr>\r\n        <div className=\"grid\" id=\"m\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} id=\"n\">\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      color=\"white\"\r\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) =>\r\n                        this.handleMouseEnter(row, col)\r\n                      }\r\n                      onMouseUp={() => this.handleMouseUp()}\r\n                      row={row}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr></hr>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 21; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 40; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n    direction: null,\r\n    totaldistance: 0,\r\n    weight: 0,\r\n    heuristicValue:\r\n      Math.abs(row - FINISH_NODE_ROW) + Math.abs(col - FINISH_NODE_COL),\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (\r\n    row === START_NODE_ROW &&\r\n    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n  ) {\r\n    return newGrid;\r\n  }\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithWallToggledOn = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithWallToggledOff = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: false,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithStart = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isStart: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithEnd = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isFinish: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../pathInfo.css';\r\nimport PathfindingVisualizer from './PathfindingVisualizer.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction DFSInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Depth First Search</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              The DFS algorithm is a recursive algorithm that uses the idea of backtracking. It involves exhaustive searches of all the nodes by going ahead, if possible, else by backtracking.\r\n              Here, the word backtrack means that when you are moving forward and there are no more nodes along the current path, you move backwards on the same path to find nodes to traverse. All the nodes will be visited on the current path till all the unvisited nodes have been traversed after which the next path will be selected.\r\n              This recursive nature of DFS can be implemented using stacks. The basic idea is as follows:\r\n              Pick a starting node and push all its adjacent nodes into a stack.\r\n              Pop a node from stack to select the next node to visit and push all its adjacent nodes into a stack.\r\n              Repeat this process until the stack is empty. However, ensure that the nodes that are visited are marked. This will prevent you from visiting the same node more than once. If you do not mark the nodes that are visited and you visit the same node more than once, you may end up in an infinite loop.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <PathfindingVisualizer></PathfindingVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DFSInfo;\r\n","export function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrderD(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Node from \"../nodeUtils/Node.jsx\";\r\nimport { dijkstra, getNodesInShortestPathOrderD } from \"./dijkstra.js\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport \"../PathfindingVisualizer.css\";\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 5;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      grid: [],\r\n      mouseIsPressed: false,\r\n      disabled: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    this.setState({ disabled: !this.state.disabled });\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, 40 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark-ca\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${START_NODE_ROW}-${START_NODE_COL}`\r\n        ).className = \"node node-initial-mark\";\r\n      }, 50 * 0);\r\n    }\r\n    for (let i = 1; i < nodesInShortestPathOrder.length - 1; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        const node2 = nodesInShortestPathOrder[i + 1];\r\n        var last_row = node.row;\r\n        var last_col = node.col;\r\n        var currRow = node2.row;\r\n        var currCol = node2.col;\r\n        if (currRow === last_row - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-up\";\r\n        } else if (currRow === last_row + 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-down\";\r\n        } else if (currCol === last_col - 1) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-left\";\r\n        } else {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path-right\";\r\n        }\r\n      }, 50 * i);\r\n    }\r\n    if (nodesInShortestPathOrder.length <= 1) {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark-nf\";\r\n      }, 50 * 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        document.getElementById(\r\n          `node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`\r\n        ).className = \"node node-final-mark\";\r\n      }, 50 * (nodesInShortestPathOrder.length - 1));\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ disabled: false });\r\n    }, 50 * (nodesInShortestPathOrder.length + 3));\r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const { grid } = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    for (let i = 0; i <= 20; i++) {\r\n      for (let j = 0; j <= 39; ++j) {\r\n        grid[i][j].distance = Infinity;\r\n      }\r\n    }\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderD(finishNode);\r\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n  resetMaze() {\r\n    this.componentDidMount();\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (\r\n                    !((row === 10 && col === 5) || (row === 10 && col === 35))\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState(this.state);\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={true}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={true}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createRandomMaze() {\r\n    this.rM();\r\n    let count = 300;\r\n    let i = 0;\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  i += 1;\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count > 0\r\n                  ) {\r\n                    let ch = randomIntFromInterval(0, 2);\r\n                    if (ch === 1) {\r\n                      const newGrid = getNewGridWithWallToggledOn(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node node-wall\";\r\n                      this.setState({ grid: newGrid });\r\n                      count -= 1;\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={true}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    } else {\r\n                      const newGrid = getNewGridWithWallToggledOff(\r\n                        this.state.grid,\r\n                        row,\r\n                        col\r\n                      );\r\n                      document.getElementById(\r\n                        `node-${node.row}-${node.col}`\r\n                      ).className = \"node\";\r\n                      this.setState({ grid: newGrid });\r\n                      return (\r\n                        <Node\r\n                          key={nodeIdx}\r\n                          col={col}\r\n                          isFinish={isFinish}\r\n                          isStart={isStart}\r\n                          isWall={false}\r\n                          mouseIsPressed={mouseIsPressed}\r\n                          onMouseDown={(row, col) =>\r\n                            this.handleMouseDown(row, col)\r\n                          }\r\n                          onMouseEnter={(row, col) =>\r\n                            this.handleMouseEnter(row, col)\r\n                          }\r\n                          onMouseUp={() => this.handleMouseUp()}\r\n                          row={row}\r\n                        ></Node>\r\n                      );\r\n                    }\r\n                  } else if (\r\n                    !(\r\n                      (row === 10 && col === 5) ||\r\n                      (row === 10 && col === 35)\r\n                    ) &&\r\n                    count <= 0\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 5) {\r\n                    const newGrid = getNewGridWithStart(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-start\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row === 10 && col === 35) {\r\n                    const newGrid = getNewGridWithEnd(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-finish\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  rM() {\r\n    this.setState(this.state);\r\n    var id = window.setTimeout(function () {}, 0);\r\n    while (id--) {\r\n      window.clearTimeout(id); // will do nothing if no timeout with id is present\r\n    }\r\n    window.clearTimeout(id);\r\n    this.resetMaze();\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  createVerticalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 4 === 0 && row !== 19) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (col % 2 === 0 && col % 4 !== 0 && row !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-wall\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (\r\n                    row === START_NODE_ROW &&\r\n                    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n                  ) {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createHorizontalMaze() {\r\n    this.rM();\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const { grid, mouseIsPressed } = this.state;\r\n    let i = 1;\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  if (row === 0 || row === 20 || col === 0 || col === 39) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 4 === 0 && col !== 38) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else if (row % 2 === 0 && row % 4 !== 0 && col !== 1) {\r\n                    const newGrid = getNewGridWithWallToggledOn(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    document.getElementById(\r\n                      `node-${node.row}-${node.col}`\r\n                    ).className = \"node node-mazecr\";\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={true}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  } else {\r\n                    const newGrid = getNewGridWithWallToggledOff(\r\n                      this.state.grid,\r\n                      row,\r\n                      col\r\n                    );\r\n                    this.setState({ grid: newGrid });\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={false}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp()}\r\n                        row={row}\r\n                      ></Node>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  startVisualization() {\r\n    this.visualizeDijkstra();\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.startVisualization()}\r\n          id=\"pathMainBtn\"\r\n        >\r\n          Start Visualization\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.rM()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Reset Board\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createVerticalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Vertical Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createHorizontalMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Horizontal Maze\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          disabled={this.state.disabled}\r\n          onClick={() => this.createRandomMaze()}\r\n          id=\"pathBtn\"\r\n        >\r\n          Create Random Maze\r\n        </Button>\r\n        <hr></hr>\r\n        <div className=\"grid\" id=\"m\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} id=\"n\">\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      color=\"white\"\r\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) =>\r\n                        this.handleMouseEnter(row, col)\r\n                      }\r\n                      onMouseUp={() => this.handleMouseUp()}\r\n                      row={row}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr></hr>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 21; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 40; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n    direction: null,\r\n    totaldistance: 0,\r\n    weight: 0,\r\n    heuristicValue:\r\n      Math.abs(row - FINISH_NODE_ROW) + Math.abs(col - FINISH_NODE_COL),\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (\r\n    row === START_NODE_ROW &&\r\n    (col === START_NODE_COL || col === FINISH_NODE_COL)\r\n  ) {\r\n    return newGrid;\r\n  }\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithWallToggledOn = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithWallToggledOff = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: false,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithStart = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isStart: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithEnd = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isFinish: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../pathInfo.css';\r\nimport PathfindingVisualizer from './PathfindingVisualizer.jsx';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction DijkstraInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Dijkstra Search</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Dijkstra Algorithm is a greedy algorithm that solves the single-source shortest path problem for a directed graph G = (V, E) with nonnegative edge weights, i.e., w (u, v) ≥ 0 for each edge (u, v) ∈ E.\r\n              Dijkstra's Algorithm maintains a set S of vertices whose final shortest - path weights from the source s have already been determined. That's for all vertices v ∈ S; we have d [v] = δ (s, v).\r\n              The algorithm repeatedly selects the vertex u ∈ V - S with the minimum shortest - path estimate, insert u into S and relaxes all edges leaving u.\r\n              Because it always chooses the \"lightest\" or \"closest\" vertex in V - S to insert into set S, it is called as the greedy strategy.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <PathfindingVisualizer></PathfindingVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DijkstraInfo;\r\n","'use strict';\r\n\r\n\r\nclass Notification {\r\n\r\n\r\n  /** @summary Create an instance of a notification handler\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build the notification singleton handler that will handle all incoming Notifications\r\n   * @param {object} [options] - The notification handler global options\r\n   * @param {string} [options.position=bottom-right] - <i>top-left; top-right; bottom-left; bottom-right;</i>\r\n   * @param {string} [options.thickBorder=top] - <i>top; bottom; left; right; none;</i>\r\n   * @param {number} [options.duration=3000] - Notification life cycle duration (in ms) in range N*\r\n   * @param {number} [options.transition=100] - Notification fade animation transition timing (in ms) in range N*\r\n   * @param {number} [options.maxActive=5] - Maximum of simultaneously opened notification in range N* */\r\n  constructor(options) {\r\n    if (!!Notification.instance) { // GoF Singleton\r\n      return Notification.instance;\r\n    }\r\n    Notification.instance = this;\r\n    // Attributes declaration\r\n    /** @private\r\n     * @member {boolean} - Dismiss all operation in progress flag */\r\n    this._dismissAllLock = false;\r\n    /** @private\r\n     * @member {object} - Notification handler container node */\r\n    this._dom = {};\r\n    /** @private\r\n     * @member {object} - Active notifications object : retrieve a notification using its ID (this._active[ID]) */\r\n    this._active = {};\r\n    /** @private\r\n     * @member {object} - Queue notifications when max active has been reached */\r\n    this._queue = {};\r\n    /** @private\r\n     * @member {object} - Notification handler default values */\r\n    this._default = {};\r\n    /** @private\r\n     * @member {string} - The handler position in viewport - <i>top-left; top-right; bottom-left; bottom-right;</i> */\r\n    this._position = '';\r\n    /** @private\r\n     * @member {string} - The thick border position in the Notification - <i>top; bottom; left; right; none;</i> */\r\n    this._thickBorder = '';\r\n    /** @private\r\n     * @member {number} - The Notification on screen duration in ms */\r\n    this._duration = 0;\r\n    /** @private\r\n     * @member {number} - The fade transition time in ms */\r\n    this._transition = 0;\r\n    /** @private\r\n     * @member {number} - The maximum amount of active Notification */\r\n    this._maxActive = 0;\r\n    /** @public\r\n     * @member {number} - The component version */\r\n    this.version = '1.1.0';\r\n    // Build singleton and attach\r\n    this._init(options);\r\n    // Return singleton\r\n    return this;\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name destroy\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Destroy the singleton and detach it from the DOM */\r\n  destroy() {\r\n    document.body.removeChild(this._dom);\r\n    // Delete object attributes\r\n    Object.keys(this).forEach(key => {\r\n      delete this[key];\r\n    });\r\n    // Clear singleton instance\r\n    Notification.instance = null;\r\n  }\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n  /*  ------------------------------  NOTIFICATION JS HANDLER CONSTRUCTION METHODS  --------------------------------  */\r\n  /*                                                                                                                  */\r\n  /*  The following methods only concerns the singleton creation. It handle all arguments and will fallback on        */\r\n  /*  default values if any argument doesn't meet its expected value or type.                                         */\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n\r\n\r\n  /** @method\r\n   * @name _init\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since July 2018\r\n   * @description Create the handler DOM element, set default values, test given options and properly add CSS class to the handler\r\n   * @param {object} [options] - The notification handler global options\r\n   * @param {string} [options.position=bottom-right] - <i>top-left; top-right; bottom-left; bottom-right;</i>\r\n   * @param {string} [options.thickBorder=top] - <i>top; bottom; left; right; none;</i>\r\n   * @param {number} [options.duration=3000] - Notification life cycle duration (in ms) in range N*\r\n   * @param {number} [options.transition=100]  - Notification fade animation transition timing (in ms) in range N*\r\n   * @param {number} [options.maxActive=5] - Maximum of simultaneously opened notification in range N* */\r\n  _init(options) {\r\n    // Declare options as object if empty\r\n    if (options === undefined) {\r\n      options = {};\r\n    }\r\n    // Create notification main container\r\n    this._dom = document.createElement('DIV'); // Notification handler DOM container\r\n    this._dom.classList.add('notification-container'); // Set proper CSS class\r\n    // Notification.js default values\r\n    this._default = {\r\n      handler: {\r\n        position: 'bottom-right',\r\n        thickBorder: 'top',\r\n        duration: 5000,\r\n        transition: 200,\r\n        maxActive: 10\r\n      },\r\n      notification: {\r\n        type: 'info',\r\n        message: '',\r\n        title: '',\r\n        iconless: false,\r\n        closable: true,\r\n        sticky: false,\r\n        renderTo: this._dom,\r\n        CBtitle: '',\r\n        callback: null,\r\n        isDimmed: false\r\n      },\r\n      color: {\r\n        success: 'rgb(76, 175, 80)',\r\n        info: 'rgb(3, 169, 244)',\r\n        warning: 'rgb(255, 152, 0)',\r\n        error: 'rgb(244, 67, 54)'\r\n      },\r\n      svgPath: {\r\n        success: 'M12.5 0C5.602 0 0 5.602 0 12.5S5.602 25 12.5 25 25 19.398 25 12.5 19.398 0 12.5 0zm-2.3 18.898l-5.5-5.5 1.8-1.796 3.7 3.699L18.5 7l1.8 1.8zm0 0',\r\n        info: 'M12.504.035a12.468 12.468 0 100 24.937 12.468 12.468 0 000-24.937zM15.1 19.359c-.643.25-1.153.445-1.537.576-.384.134-.825.199-1.333.199-.775 0-1.381-.192-1.813-.57a1.832 1.832 0 01-.642-1.442c0-.227.015-.459.047-.693.03-.24.083-.504.154-.806l.802-2.835c.069-.272.132-.527.182-.77.048-.244.069-.467.069-.668 0-.36-.075-.615-.223-.756-.153-.144-.437-.213-.857-.213-.207 0-.422.036-.639.095a9.914 9.914 0 00-.56.184l.213-.874a19.777 19.777 0 011.51-.549 4.48 4.48 0 011.361-.23c.77 0 1.368.19 1.784.56a1.857 1.857 0 01.626 1.452c0 .122-.012.341-.04.652a4.44 4.44 0 01-.162.856l-.798 2.831a8.133 8.133 0 00-.176.775c-.05.288-.075.51-.075.66 0 .374.082.633.251.771.165.134.458.202.875.202.192 0 .412-.037.66-.1.243-.073.42-.127.531-.18zm-.144-11.483a1.901 1.901 0 01-1.343.518 1.93 1.93 0 01-1.352-.518 1.65 1.65 0 01-.562-1.258 1.688 1.688 0 01.562-1.266 1.914 1.914 0 011.35-.522c.524 0 .975.173 1.345.523a1.673 1.673 0 01.56 1.266 1.65 1.65 0 01-.56 1.257z',\r\n        warning: 'M24.585 21.17L13.774 3.24a1.51 1.51 0 00-2.586 0L.376 21.17a1.51 1.51 0 001.293 2.29h21.623a1.51 1.51 0 001.292-2.29zM12.49 8.714c.621 0 1.146.35 1.146.97 0 1.895-.223 4.618-.223 6.513 0 .494-.541.7-.923.7-.51 0-.94-.208-.94-.701 0-1.894-.223-4.617-.223-6.511 0-.62.51-.971 1.163-.971zm.015 11.734a1.225 1.225 0 01-1.225-1.226c0-.669.525-1.227 1.225-1.227.652 0 1.21.558 1.21 1.227 0 .652-.557 1.225-1.21 1.225z',\r\n        error: 'M12.469.027c-3.332 0-6.465 1.301-8.824 3.653-4.86 4.86-4.86 12.777 0 17.636a12.392 12.392 0 008.824 3.653c3.336 0 6.465-1.301 8.824-3.653 4.863-4.859 4.863-12.777 0-17.636A12.417 12.417 0 0012.469.027zm5.61 18.086a1.137 1.137 0 01-.802.332c-.285 0-.582-.113-.8-.332l-4.008-4.008-4.008 4.008a1.137 1.137 0 01-.8.332c-.286 0-.583-.113-.802-.332a1.132 1.132 0 010-1.605l4.008-4.004L6.86 8.496a1.132 1.132 0 010-1.605 1.127 1.127 0 011.602 0l4.008 4.007 4.008-4.007a1.127 1.127 0 011.601 0c.45.449.45 1.164 0 1.605l-4.004 4.008 4.004 4.004c.45.449.45 1.164 0 1.605zm0 0'\r\n      }\r\n    };\r\n    // Build singleton from options and sanitize them\r\n    this._setOptionsDefault(options);\r\n    this._position = options.position;\r\n    this._thickBorder = options.thickBorder;\r\n    this._duration = options.duration;\r\n    this._transition = options.transition;\r\n    this._maxActive = options.maxActive;\r\n    this._setAttributesDefault();\r\n    // Add position CSS class only after this._position is sure to be a valid value\r\n    this._dom.classList.add(this._position);\r\n    this._attach();\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _setOptionsDefault\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Set singleton options\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Build the notification singleton according to the user options\r\n   * @param {object} options - The singleton options to set */\r\n  _setOptionsDefault(options) {\r\n    if (options.position === undefined) {\r\n      options.position = this._default.handler.position;\r\n    }\r\n\r\n    if (options.thickBorder === undefined) {\r\n      options.thickBorder = this._default.handler.thickBorder;\r\n    }\r\n\r\n    if (options.duration === undefined) {\r\n      options.duration = this._default.handler.duration;\r\n    }\r\n\r\n    if (options.transition === undefined) {\r\n      options.transition = this._default.handler.transition;\r\n    }\r\n\r\n    if (options.maxActive === undefined) {\r\n      options.maxActive = this._default.handler.maxActive;\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _setAttributesDefault\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Check the notification singleton options validity\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Fallback on default attributes value if the notification singleton options are invalid */\r\n  _setAttributesDefault() {\r\n    if (this._position !== 'top-left' && /* Illegal value for position */\r\n        this._position !== 'top-right' &&\r\n        this._position !== 'bottom-left' &&\r\n        this._position !== 'bottom-right') {\r\n      this._position = this._default.handler.position; // Default value\r\n    }\r\n\r\n    if (this._thickBorder !== 'top' && /* Illegal value for thick border */\r\n        this._thickBorder !== 'bottom' &&\r\n        this._thickBorder !== 'left' &&\r\n        this._thickBorder !== 'right' &&\r\n        this._thickBorder !== 'none') {\r\n      this._thickBorder = this._default.handler.thickBorder; // Default value\r\n    }\r\n\r\n    if (typeof this._duration !== 'number' || this._duration <= 0) { // Illegal value for duration\r\n      this._duration = this._default.handler.duration; // Default value\r\n    }\r\n\r\n    if (typeof this._transition !== 'number' || this._duration < (this._transition * 2) || this._transition <= 0) { // Transition over (duration / 2)\r\n      this._transition = this._default.handler.transition; // Default value for _maxActive\r\n    }\r\n\r\n    if (typeof this._maxActive !== 'number' || this._maxActive <= 0) { // Illegal value for maxActive\r\n      this._maxActive = this._default.handler.maxActive; // Default value for _maxActive\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _attach\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since July 2018\r\n   * @description Attach the notification handler to the dom using a fragment */\r\n  _attach() {\r\n    const fragment = document.createDocumentFragment();\r\n    fragment.appendChild(this._dom);\r\n    document.body.appendChild(fragment);\r\n  }\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n  /*  -------------------------------------  NOTIFICATION SPECIFIC METHODS  ----------------------------------------  */\r\n  /*                                                                                                                  */\r\n  /*  The following methods implements notification features. It handle its events, lifecycle depending on its        */\r\n  /*  parameters, its DOM structure, and its animations. The Notification singleton will handle the notification      */\r\n  /*  stacking the in user interface.                                                                                 */\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n\r\n\r\n  /** @method\r\n   * @name _events\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Handle mouse events for the given notification\r\n   * @param {{id: number}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {number} notification.requestCount - Notification inner call counter\r\n   * @param {number} notification.timeoutID - Notification own setTimeout ID\r\n   * @param {boolean} notification.sticky - Notification sticky behvaior\r\n   * @param {boolean} notification.closable - Make notification closable flag */\r\n  _events(notification) {\r\n    let closeFired = false; // Close fired flag\r\n\r\n    // Inner callback functions\r\n    const _unDim = () => { // Undim notification\r\n      if (notification.isDimmed) {\r\n        this._unDim(notification);\r\n      }\r\n    };\r\n\r\n    const _close = () => { // Close notification\r\n      if (this._active[notification.id] === undefined) {\r\n        return;\r\n      }\r\n\r\n      // Update counter DOM element\r\n      if (notification.requestCount > 1) {\r\n        this._decrementRequestCounter(notification, true);\r\n      }\r\n\r\n      // Remove notification element from the DOM tree\r\n      else if (!closeFired) {\r\n        closeFired = true;\r\n        window.clearTimeout(notification.timeoutID); // Clear life cycle timeout\r\n        notification.dom.close.removeEventListener('click', _close); // Avoid error when spam clicking the close button\r\n        this._close(notification);\r\n      }\r\n    };\r\n\r\n    const _resetTimeout = () => { // Reset life cycle timeout\r\n      if (this._active[notification.id] === undefined) {\r\n        return;\r\n      }\r\n\r\n      if (!closeFired && !notification.isDimmed) { // Only reset timeout if no close event has been fired\r\n        this._resetTimeout(notification);\r\n      }\r\n    };\r\n\r\n    // Mouse event listeners\r\n    if (notification.sticky) {\r\n      notification.dom.addEventListener('mouseenter', _unDim.bind(this));\r\n      notification.dom.addEventListener('mouseout', _unDim.bind(this));\r\n    }\r\n\r\n    if (notification.closable) {\r\n      notification.dom.addEventListener('click', _close.bind(this));\r\n      notification.dom.close.addEventListener('click', _close.bind(this));\r\n    }\r\n\r\n    notification.dom.addEventListener('mouseover', _resetTimeout.bind(this));\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _buildUI\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Builds the DOM element that contains and that adapts to all given options\r\n   * @param {object} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {string} notification.type - Error, Warning, Info, Success\r\n   * @param {string} notification.title - Notification title\r\n   * @param {string} notification.message - Notification message\r\n   * @param {boolean} notification.iconless - No icon flag\r\n   * @param {string} notification.thickBorder - Notification border side (override handler side value)\r\n   * @param {boolean} notification.closable - Make notification closable flag\r\n   * @param {boolean} notification.sticky - Make notification sticky flag\r\n   * @param {string} notification.CBtitle - Notification callback title\r\n   * @param {function} notification.callback - Notification callback button\r\n   * @returns {object} Enhanced and ready notification object */\r\n  _buildUI(notification) {\r\n    notification.requestCount = 1;\r\n    notification.totalRequestCount = 1;\r\n    this._buildUIDom(notification);\r\n    this._buildNotificationType(notification);\r\n\r\n    if (notification.iconless) {\r\n      notification.dom.message.classList.add('iconless-width');\r\n    }\r\n\r\n    notification.dom.text.appendChild(notification.dom.maintitle);\r\n    notification.dom.text.appendChild(notification.dom.message);\r\n    // Add callback button and listener if needed\r\n    if (notification.callback) {\r\n      const callbackButton = document.createElement('BUTTON');\r\n      callbackButton.innerHTML = notification.CBtitle;\r\n      notification.dom.text.appendChild(callbackButton);\r\n      callbackButton.addEventListener('click', () => {\r\n        this._close(notification);\r\n        notification.callback();\r\n      });\r\n    }\r\n    // Fill notification DOM element\r\n    if (!notification.iconless) {\r\n      notification.dom.appendChild(notification.dom.icon);\r\n    }\r\n\r\n    notification.dom.appendChild(notification.dom.text);\r\n    // Append close button if needed\r\n    if (notification.closable) {\r\n      notification.dom.appendChild(notification.dom.close);\r\n    }\r\n    // Return final notification\r\n    return notification;\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _buildUIDom\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Create the Notification DOM tree\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Build all the Notification internal structure\r\n   * @param {object} notification - The notification to create */\r\n  _buildUIDom(notification) {\r\n    // Create notification DOM elements\r\n    notification.dom = document.createElement('DIV');\r\n    notification.dom.icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    notification.dom.iconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    notification.dom.text = document.createElement('DIV');\r\n    notification.dom.close = document.createElement('DIV');\r\n    notification.dom.maintitle = document.createElement('H6');\r\n    notification.dom.message = document.createElement('P');\r\n    // Class assignation\r\n    notification.dom.classList.add('notification');\r\n    notification.dom.icon.classList.add('vector-container');\r\n    notification.dom.text.classList.add('text-container');\r\n    notification.dom.close.classList.add('close');\r\n    // Changing border side\r\n    if (notification.thickBorder === 'top') {\r\n      notification.dom.classList.add('top-border');\r\n    } else if (notification.thickBorder === 'bottom') {\r\n      notification.dom.classList.add('bottom-border');\r\n    } else if (notification.thickBorder === 'left') {\r\n      notification.dom.classList.add('left-border');\r\n    } else if (notification.thickBorder === 'right') {\r\n      notification.dom.classList.add('right-border');\r\n    }\r\n    // Text modification\r\n    notification.dom.maintitle.innerHTML = notification.title || '';\r\n    notification.dom.message.innerHTML = notification.message || '';\r\n    notification.dom.close.innerHTML = '&#x2716;';\r\n    // Image vector\r\n    notification.dom.icon.setAttribute('viewBox', '0 0 25 25');\r\n    notification.dom.icon.setAttribute('width', '25');\r\n    notification.dom.icon.setAttribute('height', '25');\r\n    notification.dom.icon.appendChild(notification.dom.iconPath);\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _buildNotificationType\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Attach proper assets and css\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Fills the Notification icon and class according to its inner type\r\n   * @param {object} notification - The notification to fill */\r\n  _buildNotificationType(notification) {\r\n    // Type specification (title, icon, color)\r\n    if (['success', 'warning', 'error', 'info'].indexOf(notification.type) !== -1){\r\n      notification.dom.classList.add(notification.type);\r\n\r\n      if (!notification.iconless) {\r\n        notification.dom.iconPath.setAttribute('fill', this._default.color[notification.type]);\r\n        notification.dom.iconPath.setAttribute('d', this._default.svgPath[notification.type]);\r\n      }\r\n    } else {\r\n      notification.dom.classList.add('info');\r\n\r\n      if (!notification.iconless) {\r\n        notification.dom.iconPath.setAttribute('fill', this._default.color.info);\r\n        notification.dom.iconPath.setAttribute('d', this._default.svgPath.info);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _start\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Call this method to add the new notification to the DOM container, and launch its life cycle\r\n   * @param {object} notification - The notification object\r\n   * @param {number} notification.id - Notification own ID */\r\n  _start(notification) {\r\n    if (Object.keys(this._active).length >= this._maxActive) {\r\n      this._queue[notification.id] = notification;\r\n    } else {\r\n      this._active[notification.id] = notification; // Append the new notification to the _active object\r\n\r\n      this._events(notification); // Listen to mouse events on the newly created notification\r\n      this._open(notification); // Open the new notification\r\n\r\n      notification.timeoutID = window.setTimeout(() => {\r\n        this._checkCounter(notification); // Check notification request count to act accordingly\r\n      }, notification.duration); // Use Notification master duration\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _open\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Open and add the notification to the container\r\n   * @param {{id: number}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {object} notification.dom - Notifiction DOM element */\r\n  _open(notification) {\r\n    // Reverse insertion when notifications are on bottom\r\n    if (this._position === 'bottom-right' || this._position === 'bottom-left') {\r\n      notification.renderTo.insertBefore(notification.dom, notification.renderTo.firstChild);\r\n    } else {\r\n      notification.renderTo.appendChild(notification.dom);\r\n    }\r\n\r\n    notification.opened = Date.now();\r\n    window.setTimeout(() => {\r\n      notification.dom.style.opacity = 1;\r\n    }, 10);\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _close\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Close and remove the notification from the container\r\n   * @param {{id: number}|{id: number, dom: Object, requestCount: number, timeoutID: number, sticky: boolean, closable: boolean}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {boolean} notification.isClosing - Already closing flag\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {object} notification.renderTo - DOM object to render the notification in */\r\n  _close(notification) {\r\n    if (notification.isClosing) { // Avoid double close on a notification (in case dismiss/dismissAll is triggerred when notification is already closing)\r\n      return;\r\n    }\r\n\r\n    notification.isClosing = true; // Lock notification to one fadeOut animation\r\n    notification.closed = Date.now();\r\n    notification.effectiveDuration = notification.closed - notification.opened;\r\n    notification.dom.style.opacity = 0;\r\n    window.setTimeout(() => {\r\n      notification.renderTo.removeChild(notification.dom); // Remove this notification from the DOM tree\r\n      delete this._active[notification.id];\r\n\r\n      if (Object.keys(this._queue).length > 0) { // Notification queue is not empty\r\n        this._start(this._queue[Object.keys(this._queue)[0]]); // Start first queued notification\r\n        delete this._queue[Object.keys(this._queue)[0]]; // Shift queue object\r\n      } else if (Object.keys(this._active).length === 0) { // Check this._active emptyness\r\n        this._dismissAllLock = false; // Unlock dismissAllLock\r\n      }\r\n    }, 1000); // Transition value set in _notification.scss\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _incrementRequestCounter\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description This method is called when a notification is requested another time\r\n   * @param {object} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {number} notification.requestCount - Notification inner call counter\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {boolean} notification.sticky - Notification sticky behvaior\r\n   * @param {boolean} notification.isDimmed - Notification dimmed status (only useful if notification.sticky is true) */\r\n  _incrementRequestCounter(notification) {\r\n    ++notification.requestCount; // Increment notification.requestCount\r\n\r\n    if (notification.totalRequestCount < notification.requestCount) {\r\n      notification.totalRequestCount = notification.requestCount;\r\n    }\r\n\r\n    // Update counter DOM element\r\n    if (notification.requestCount > 1) {\r\n      let valueToDisplay = '∞';\r\n      if (notification.requestCount < 100) {\r\n        valueToDisplay = notification.requestCount;\r\n      }\r\n\r\n      if (notification.dom.counter) { // Update existing counter\r\n        notification.dom.counter.innerHTML = valueToDisplay;\r\n      } else { // Create counter DOM element\r\n        notification.dom.counter = document.createElement('DIV');\r\n        notification.dom.counter.classList.add('counter');\r\n        notification.dom.counter.innerHTML = valueToDisplay;\r\n        notification.dom.appendChild(notification.dom.counter);\r\n      }\r\n    }\r\n\r\n    // Undim notification if it is a sticky/dimmed one\r\n    if (notification.sticky && notification.isDimmed) {\r\n      this._unDim(notification);\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _decrementRequestCounter\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description This method is called each notification cycle end to update its inner counter\r\n   * @param {{id: number, dom: Object, requestCount: number, timeoutID: number, sticky: boolean, closable: boolean}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {boolean} notification.sticky - Notification sticky behvaior\r\n   * @param {boolean} notification.isDimmed - Notification dimmed status (only useful if notification.sticky is true)\r\n   * @param {number} notification.requestCount - Notification inner call counter\r\n   * @param {object} notification.dom - Notification DOM element\r\n   * @param {boolean} force - To force the notification.requestCount decrementation */\r\n  _decrementRequestCounter(notification, force) {\r\n    if (notification.sticky && !force) {\r\n      if (!notification.isDimmed) {\r\n        this._dim(notification);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this._resetTimeout(notification);\r\n    --notification.requestCount; // Decrement notification.requestCount\r\n\r\n    // Update counter DOM element\r\n    if (notification.requestCount > 1) {\r\n      let valueToDisplay = '∞';\r\n      if (notification.requestCount < 100) {\r\n        valueToDisplay = notification.requestCount;\r\n      }\r\n\r\n      notification.dom.counter.innerHTML = valueToDisplay;\r\n    } else { // Remove counter element from the DOM tree\r\n      notification.dom.removeChild(notification.dom.counter);\r\n      delete notification.dom.counter;\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _checkCounter\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description This method will reset the fadeout/dim timeout or close/dim the notification depending on its requestCount\r\n   * @param {{id: number}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {number} notification.requestCount - Notification inner call counter\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {number} notification.timeoutID - Notification own setTimeout ID\r\n   * @param {boolean} notification.sticky - Notification sticky behvaior */\r\n  _checkCounter(notification) {\r\n    // This notification as still more than one cycle to live\r\n    if (notification.requestCount > 1) {\r\n      this._decrementRequestCounter(notification);\r\n    } else { // This notification reached the end of its life cycle\r\n      if (notification.renderTo.contains(notification.dom)) {\r\n        window.clearTimeout(notification.timeoutID);\r\n        if (notification.sticky) { // FadeOut/Dim depending on sticky behavior\r\n          this._dim(notification);\r\n        } else {\r\n          this._close(notification);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _clearRequestCount\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Method that clear every pending request\r\n   * @param {object} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {object} notification.dom - Notifiction DOM element */\r\n  _clearRequestCount(notification) {\r\n    notification.requestCount = 1;\r\n    notification.dom.removeChild(notification.dom.counter);\r\n    delete notification.dom.counter;\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _resetTimeout\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Use this to reset a notification life cycle, and delay its close event\r\n   * @param {{id: number}|{id: number, dom: Object, requestCount: number, timeoutID: number, sticky: boolean, closable: boolean}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {number} notification.timeoutID - Notification own setTimeout ID */\r\n  _resetTimeout(notification) {\r\n    window.clearTimeout(notification.timeoutID); // Clear previous life cycle\r\n    notification.timeoutID = window.setTimeout(() => {\r\n      this._checkCounter(notification); // Check notification request count to act accordingly\r\n    }, notification.duration); // Use Notification master duration\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _dim\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Only useful for sticky notification that dim instead of close at the end of its life cycle\r\n   * @param {{id: number, requestCount: number, dom: Object, timeoutID: number, sticky: boolean}} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {boolean} notification.sticky - Notification sticky behvaior\r\n   * @param {boolean} notification.isDimmed - Notification dimmed status (only useful if notification.sticky is true) */\r\n  _dim(notification) {\r\n    const that = this;\r\n    let i = 100;\r\n    (function halfFadeOut() { // Start animation immediatly\r\n      if (i >= 0) {\r\n        notification.dom.style.opacity = i / 100;\r\n        --i;\r\n\r\n        if (i === 50 && notification.sticky) { // Opacity has reached 0.51\r\n          notification.dom.style.opacity = 0.5; // Set half transparency on notification\r\n          notification.isDimmed = true; // Update notification dim status\r\n          return; // End function\r\n        }\r\n      }\r\n\r\n      window.setTimeout(halfFadeOut, that._transition / 100); // Split animation transition into 100 iterations (50 for real here)\r\n    })();\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _unDim\r\n   * @private\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Call this method when a notification is not inactive anymore\r\n   * @param {object} notification - The notification object\r\n   * @param {number} notification.id - Notification personnal ID\r\n   * @param {object} notification.dom - Notifiction DOM element\r\n   * @param {boolean} notification.isDimmed - Notification dimmed status (only useful if notification.sticky is true) */\r\n  _unDim(notification) {\r\n    const that = this;\r\n    let i = 50;\r\n    (function halfFadeIn() {\r\n      if (i < 100) {\r\n        notification.dom.style.opacity = i / 100;\r\n        ++i;\r\n      } else if (i === 100) {\r\n        notification.dom.style.opacity = 1; // Set full visibility on notification\r\n        notification.isDimmed = false; // Update notification dim status\r\n        that._resetTimeout(notification); // Reset life cycle timeout\r\n        return; // End function\r\n      }\r\n\r\n      window.setTimeout(halfFadeIn, that._transition / 100); // Split animation transition into 100 iterations (50 for real here)\r\n    })();\r\n  }\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n  /*  -----------------------------  SINGLE NOTIFICATION CONSTRUCTION UTILS METHODS  -------------------------------  */\r\n  /*                                                                                                                  */\r\n  /*  The following methods only concerns a new notification request. It will test the options validity, default to   */\r\n  /*  fallback value if necessary and give the notification a pseudo unique identifier.                               */\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n\r\n\r\n  /** @method\r\n   * @name _checkNotificationOptionsValidity\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Check the Notification options validity\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Check a Notification options object against the required parameters.\r\n   * @param {object} options - The notification options to check validity */\r\n  _checkNotificationOptionsValidity(options) {\r\n    // Check for mandatory arguments existence\r\n    if (options === undefined || (options.type === undefined || options.message === undefined)) {\r\n      return false;\r\n    }\r\n    // Check existing message\r\n    if (typeof options.message !== 'string' || options.message.length === 0) {\r\n      return false;\r\n    }\r\n    // Check for unclosable at all notification\r\n    if (options.sticky && options.closable === false) {\r\n      return false;\r\n    }\r\n    // Test Notification inner variables validity\r\n    if (options.type !== 'info' && options.type !== 'success' && options.type !== 'warning' && options.type !== 'error') {\r\n      options.type = this._default.notification.type;\r\n    }\r\n    // Unlock dismissAllLock\r\n    if (this._dismissAllLock) {\r\n      this._dismissAllLock = false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _setOptionsFallback\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Set Notification fallback options\r\n   * @author Arthur Beaulieu\r\n   * @since March 2019\r\n   * @description Check a Notification options object and fill it with default value in case they are empty.\r\n   * @param {object} options - The notification options to fill with default value if empty */\r\n  _setOptionsFallback(options) {\r\n    if (options.title === undefined) {\r\n      options.title = this._default.notification.title;\r\n    }\r\n\r\n    if (options.duration === undefined) {\r\n      options.duration = this._duration;\r\n    }\r\n\r\n    if (options.iconless === undefined) {\r\n      options.iconless = this._default.notification.iconless;\r\n    }\r\n\r\n    if (options.thickBorder === undefined) {\r\n      options.thickBorder = this._thickBorder;\r\n    }\r\n\r\n    if (options.closable === undefined) {\r\n      options.closable = this._default.notification.closable;\r\n    }\r\n\r\n    if (options.sticky === undefined) {\r\n      options.sticky= this._default.notification.sticky;\r\n    }\r\n\r\n    if (options.renderTo === undefined) {\r\n      options.renderTo = this._default.notification.renderTo;\r\n    }\r\n\r\n    if (options.CBtitle === undefined) {\r\n      options.CBtitle = this._default.notification.CBtitle;\r\n    }\r\n\r\n    if (options.callback === undefined) {\r\n      options.callback = this._default.notification.callback;\r\n    }\r\n\r\n    if (options.isDimmed === undefined) {\r\n      options.isDimmed = this._default.notification.isDimmed;\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name _idGenerator\r\n   * @private\r\n   * @memberof Notification\r\n   * @summary Generate an ID\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Hash the seed to generate an ID\r\n   * @param {string} seed   - The seed string to hash\r\n   * @param {number} length - The length of the returned ID */\r\n  _idGenerator(seed, length) {\r\n    /* Original code from:\r\n     * http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\r\n     * Tweaked to fit Notification class needs\r\n     */\r\n    let hash = 0;\r\n    let character = '';\r\n\r\n    if (seed.length === 0 || length > 12) { return undefined; }\r\n\r\n    for (let i = 0; i < seed.length; ++i) {\r\n      character = seed.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + character;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n\r\n    return (Math.abs(hash).toString(36) + '' + Math.abs(hash / 2).toString(36).split('').reverse().join('')).substring(0, length).toUpperCase(); // Here is the twekead line\r\n  }\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n  /*  --------------------------------------  NOTIFICATION PUBLIC METHODS  -----------------------------------------  */\r\n  /*                                                                                                                  */\r\n  /*  The following methods are the exposed API of the Notification component. It allow to raise standard or custom   */\r\n  /*  notification without bothering their lifecycle, position or other JavaScript expensive implementation.          */\r\n  /*  --------------------------------------------------------------------------------------------------------------- */\r\n\r\n\r\n  /** @method\r\n   * @name new\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build a notification according to the given options, then append it to notification container.\r\n   * @param {object} options - The notification options object\r\n   * @param {string} options.type - <i>Error; Warning; Info; Success;</i>\r\n   * @param {string} [options.title=options.type] - Notification title\r\n   * @param {string} options.message - Notification message\r\n   * @param {number} [options.duration=handler] - Notification duration (override handler duration value)\r\n   * @param {boolean} [options.iconless=false] - No icon flag\r\n   * @param {string} [options.thickBorder=handler] - Notification border side (override handler side value)\r\n   * @param {boolean} [options.closable=true] - Make notification closable flag\r\n   * @param {boolean} [options.sticky=false] - Make notification sticky flag\r\n   * @param {object} [options.renderTo=handler] - Dom object to render the notification in\r\n   * @param {string} [options.CBtitle=Callback] - Notification callback title\r\n   * @param {function} [options.callback=undefined] - Notification callback button\r\n   * @returns {number} The newly created notification ID */\r\n  new(options) {\r\n    if (this._checkNotificationOptionsValidity(options) === false) {\r\n      console.error('Notification.js : new() options argument object is invalid.');\r\n      return -1;\r\n    }\r\n\r\n    this._setOptionsFallback(options);\r\n    // Build notification DOM element according to the given options\r\n    let notification = this._buildUI({\r\n      id: this._idGenerator(`${options.type}${options.message}`, 5), // Generating an ID of 5 characters long from notification mandatory fields\r\n      type: options.type,\r\n      message: options.message,\r\n      title: options.title,\r\n      duration: options.duration,\r\n      iconless: options.iconless,\r\n      thickBorder: options.thickBorder,\r\n      closable: options.closable,\r\n      sticky: options.sticky,\r\n      renderTo: options.renderTo,\r\n      CBtitle: options.CBtitle,\r\n      callback: options.callback,\r\n      isDimmed: options.isDimmed // Only useful if sticky is set to true\r\n    });\r\n    // Create a new notification in the container: No notification with the same ID is already open\r\n    if (!this._active[notification.id]) {\r\n      this._start(notification);\r\n    } else { // Use existing notification: increment request count and reset timeout\r\n      this._resetTimeout(this._active[notification.id]);\r\n      this._incrementRequestCounter(this._active[notification.id]);\r\n      notification = this._active[notification.id]; // Clear local new notification since it already exists in this._active\r\n    }\r\n\r\n    return notification.id;\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name info\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build an info notification\r\n   * @param {object} options - The notification options object (see new() arguments since this is an abstraction of new())\r\n   * @returns {number} The newly created notification ID */\r\n  info(options) {\r\n    if (options) {\r\n      options.type = 'info';\r\n      return this.new(options);\r\n    } else {\r\n      console.error('Notification.js : No arguments provided for info() method.');\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name success\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build a success notification\r\n   * @param {object} options - The notification options object (see new() arguments since this is an abstraction of new())\r\n   * @returns {number} The newly created notification ID */\r\n  success(options) {\r\n    if (options) {\r\n      options.type = 'success';\r\n      return this.new(options);\r\n    } else {\r\n      console.error('Notification.js : No arguments provided for success() method.');\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name warning\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build a warning notification\r\n   * @param {object} options - The notification options object (see new() arguments since this is an abstraction of new())\r\n   * @returns {number} The newly created notification ID */\r\n  warning(options) {\r\n    if (options) {\r\n      options.type = 'warning';\r\n      return this.new(options);\r\n    } else {\r\n      console.error('Notification.js : No arguments provided for warning() method.');\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name error\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Build an error notification\r\n   * @param {object} options - The notification options object (see new() arguments since this is an abstraction of new())\r\n   * @returns {number} The newly created notification ID */\r\n  error(options) {\r\n    if (options) {\r\n      options.type = 'error';\r\n      return this.new(options);\r\n    } else {\r\n      console.error('Notification.js : No arguments provided for error() method.');\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name dismiss\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Dismiss a specific notification via its ID\r\n   * @param {string} id - The notification ID to dismiss */\r\n  dismiss(id) {\r\n    window.clearTimeout(this._active[id].timeoutID); // Clear notification timeout\r\n\r\n    if (this._active[id].requestCount > 1) { // Several request are pending\r\n      this._clearRequestCount(this._active[id]); // Clear all pending request\r\n    }\r\n\r\n    this._close(this._active[id]); // Close notification\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name dismissAll\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Clear the notification handler from all its active notifications */\r\n  dismissAll() {\r\n    if (!this._dismissAllLock && Object.keys(this._active).length !== 0) { // Check that _dimissAllLock is disable and that there is still notification displayed\r\n      this._dismissAllLock = true; // dismissAllLock will be unlocked at the last _close() method call\r\n      this._queue = {}; // Clear queue object\r\n\r\n      for (const id in this._active) { // Iterate over notifications\r\n        this.dismiss(id);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /** @method\r\n   * @name dismissType\r\n   * @public\r\n   * @memberof Notification\r\n   * @author Arthur Beaulieu\r\n   * @since June 2018\r\n   * @description Dismiss all notifications from a given type\r\n   * @param {string} type - <i>succes; info; warning; error;</i> */\r\n  dismissType(type) {\r\n    if (Object.keys(this._active).length !== 0) { // Check that _dismissAllLock is disable and that there is still notification displayed\r\n      for (const id in this._active) { // Iterate over notifications\r\n        if (this._active[id].type === type) {\r\n          this.dismiss(id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Notification;\r\n","export const applyDrag = (type, ax, arr, dragResult) => {\r\n\r\n  const { removedIndex, addedIndex, payload } = dragResult;\r\n  if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n  for (let i = 0; i < ax.length; i++) {\r\n    arr[i].data = (ax[i]);\r\n  }\r\n  const result = [...arr];\r\n  let itemToAdd = payload;\r\n\r\n  if (removedIndex !== null) {\r\n    itemToAdd = result.splice(removedIndex, 1)[0];\r\n  }\r\n\r\n  if (addedIndex !== null) {\r\n    result.splice(addedIndex, 0, itemToAdd);\r\n  }\r\n  const result2 = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    result2.push(parseInt(result[i].data));\r\n  }\r\n  if (type === \"SortedSet\") {\r\n    result2.sort(function (a, b) { return a - b });\r\n  }\r\n  return result2;\r\n};\r\n\r\nexport const generateItems = (count, creator) => {\r\n  const result = [];\r\n  for (let i = 0; i < count; i++) {\r\n    result.push(creator(i));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const takeNewArr = (arr, fo) => {\r\n  const result = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    result.push(parseInt(arr[i].data));\r\n  }\r\n  return result;\r\n};","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"./ArrayVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class ArrayVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"array2\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"array2\";\r\n    var vl = document.getElementById(\"xy\");\r\n    vl.style.border = \"10px solid #ffbf00\";\r\n    vl.style.display = \"block\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"none\";\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(14, 650));\r\n    }\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"xy\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"xy\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar - 1; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"xy\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueArr() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 8) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 8 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    array.push(parseInt(x));\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"xy\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueArr();\r\n  }\r\n\r\n  messageCallSet() {}\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new list\r\n          </Button>\r\n          <input type=\"number\" id=\"dval\" name=\"dval\" />\r\n          <Button onClick={() => this.deleteValue()} id=\"dataBtn\">\r\n            Delete Value\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"xy\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  \"array\",\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p className=\"p2\">{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p className=\"p2\">{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport ArrayVisualizer from './ArrayVisualizer.jsx';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\n\r\nfunction ArrayInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Array</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">Arrays are list-like objects whose prototype has methods to perform traversal and mutation operations. Neither the length of a JavaScript array nor the types of its elements are fixed.\r\n              Since an array's length can change at any time, and data can be stored at non-contiguous locations in the array, JavaScript arrays are not guaranteed to be dense; this depends on how the programmer chooses to use them.\r\n              In general, these are convenient characteristics; but if these features are not desirable for your particular use, you might consider using typed arrays.\r\n              Arrays cannot use strings as element indexes (as in an associative array) but must use integers. Setting or accessing via non-integers using bracket notation (or dot notation) will not set or retrieve an element from the array list itself, but will set or access a variable associated with that array's object property collection.\r\n              The array's object properties and list of array elements are separate, and the array's traversal and mutation operations cannot be applied to these named properties.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <ArrayVisualizer></ArrayVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArrayInfo;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./SSVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class SSVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"array2\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"array2\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.border = \"transparent\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.display = \"none\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"block\";\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; ) {\r\n      var o = randomIntFromInterval(14, 650);\r\n      if (array.includes(parseInt(o))) {\r\n        continue;\r\n      } else {\r\n        array.push(parseInt(o));\r\n        i++;\r\n      }\r\n    }\r\n    array.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar - 1; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueSortedSet() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 8) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 8 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    if (array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"info\",\r\n        title: \"Exists\",\r\n        message: \"The element already exist in the set\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    array.push(parseInt(x));\r\n    array.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 142 + 90 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueSortedSet();\r\n  }\r\n\r\n  messageCallSet() {\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"warning\",\r\n      title: \"Sorted Set\",\r\n      message: \"Elements remain sorted in Sorted Set \",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new list\r\n          </Button>\r\n          <input type=\"number\" id=\"dval\" name=\"dval\" />\r\n          <Button onClick={() => this.deleteValue()} id=\"dataBtn\">\r\n            Delete Value\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"x\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  this.refs.dsType.value,\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p>{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport SSVisualizer from './SSVisualizer.jsx';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction SSInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Sorted Set</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              A set is used to provide a particular ordering on its element. The elements are ordered either by using a natural ordering or by using a Comparator.\r\n              All the elements which are inserted into a sorted set must implement the Comparable interface.\r\n              The set's iterator will traverse the set in an ascending order. Several other operations are provided in order to make best use of ordering.\r\n              All the elements must be mutually comparable.</p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <SSVisualizer></SSVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SSInfo;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./USVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class USVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"array2\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"array2\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.border = \"transparent\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.display = \"none\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"block\";\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(14, 650));\r\n    }\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      console.log(arrayBar[i]);\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n      console.log(array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar - 1; i++) {\r\n      array.push(this.state.array[i]);\r\n      console.log(array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    console.log(this.state.abar);\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueUnsortedSet() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 8) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 8 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n      console.log(array[i]);\r\n    }\r\n    if (array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"info\",\r\n        title: \"Exists\",\r\n        message: \"The element already exist in the set\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    array.push(parseInt(x));\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    console.log(this.state.abar);\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 142 + 90 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueUnsortedSet();\r\n  }\r\n\r\n  messageCallSet() {}\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new list\r\n          </Button>\r\n          <input type=\"number\" id=\"dval\" name=\"dval\" />\r\n          <Button onClick={() => this.deleteValue()} id=\"dataBtn\">\r\n            Delete Value\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"x\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  this.refs.dsType.value,\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p>{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport USVisualizer from './USVisualizer.jsx';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction USInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Unsorted Set</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              A set is used to provide a particular ordering on its element. The elements are ordered either by using a natural ordering or by using a Comparator.\r\n              All the elements which are inserted into a sorted set must implement the Comparable interface.\r\n              The set's iterator will traverse the set in an ascending order. Several other operations are provided in order to make best use of ordering.\r\n              All the elements must be mutually comparable.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <USVisualizer></USVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default USInfo;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./SLLVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class SLLVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"linked-list\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"linked-list\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.display = \"none\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"block\";\r\n\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(14, 650));\r\n    }\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar - 1; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueArr() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 6) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 6 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    array.push(parseInt(x));\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueArr();\r\n  }\r\n\r\n  messageCallSet() {}\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new list\r\n          </Button>\r\n          <input type=\"number\" id=\"dval\" name=\"dval\" />\r\n          <Button onClick={() => this.deleteValue()} id=\"dataBtn\">\r\n            Delete Value\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  this.refs.dsType.value,\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p className=\"p2\">{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport SLLVisualizer from './SLLVisualizer.jsx';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction SLLInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Singly Linked List</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Singly linked list can be defined as the collection of ordered set of elements. The number of elements may vary according to need of the program.\r\n              A node in the singly linked list consist of two parts: data part and link part. Data part of the node stores actual information that is to be represented by the node while the link part of the node stores the address of its immediate successor.\r\n              One way chain or singly linked list can be traversed only in one direction. In other words, we can say that each node contains only next pointer, therefore we can not traverse the list in the reverse direction.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <SLLVisualizer></SLLVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SLLInfo;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./DLLVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class DLLVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"doubly-linked-list\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"doubly-linked-list\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.display = \"none\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"block\";\r\n\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(14, 650));\r\n    }\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar - 1; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueArr() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 6) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 6 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    array.push(parseInt(x));\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueArr();\r\n  }\r\n\r\n  messageCallSet() {}\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new list\r\n          </Button>\r\n          <input type=\"number\" id=\"dval\" name=\"dval\" />\r\n          <Button onClick={() => this.deleteValue()} id=\"dataBtn\">\r\n            Delete Value\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  this.refs.dsType.value,\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p className=\"p2\">{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport DLLVisualizer from './DLLVisualizer.jsx';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction DLLInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Doubly Linked List</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Doubly linked list can be defined as the collection of ordered set of elements. The number of elements may vary according to need of the program. A node in the singly linked list consist of two parts: data part and link part. Data part of the node stores actual information that is to be represented by the node while the link part of the node stores the address of its immediate successor.\r\n              Two way chain or doubly linked list can be traversed only in two direction. In other words, we can say that each node contains only next pointer, therefore we can not traverse the list in the reverse direction.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <DLLVisualizer></DLLVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DLLInfo;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification.js\";\r\nimport \"../notification.min.css\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { applyDrag, generateItems } from \"../utils\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./QueueVisualizer.css\";\r\n\r\nconst groupStyle = {\r\n  margin: \"auto\",\r\n  overflowX: \"auto\",\r\n  // border: '1px solid #ccc'\r\n};\r\n\r\nvar ac = [1, 2, 3, 4];\r\nvar sz = 4;\r\n\r\nexport default class QueueVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [1, 2, 3, 4],\r\n      abar: \"4\",\r\n      cn: \"queue\",\r\n      items3: generateItems(parseInt(sz), (i) => ({\r\n        id: i,\r\n        data: ac[parseInt(i)],\r\n      })),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.state.cn = \"queue\";\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.display = \"none\";\r\n    var v2 = document.getElementById(\"arrow\");\r\n    v2.style.display = \"block\";\r\n\r\n    const array = [];\r\n    this.state.abar = parseInt(4);\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(randomIntFromInterval(14, 650));\r\n    }\r\n    ac = array;\r\n    sz = 4;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  deleteValue() {\r\n    const array = [];\r\n    var x = document.getElementById(\"dval\").value;\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x === \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (!this.state.array.includes(parseInt(x))) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"404 Not Found\",\r\n        message: \"The value to be deleted is not available\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    var count = 0;\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (this.state.array[i] === parseInt(x)) {\r\n        count++;\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(count);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  pop() {\r\n    const array = [];\r\n    if (this.state.abar === 0) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Underflow\",\r\n        message: \"List is already empty\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      if (i == 0) {\r\n        continue;\r\n      }\r\n      array.push(this.state.array[i]);\r\n    }\r\n    this.state.abar = parseInt(this.state.abar) - parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n        boStyle.backgroundColor = \"#ffbf00\";\r\n        boStyle.color = \"#000000\";\r\n      }\r\n    }\r\n\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  addValueArr() {\r\n    const array = [];\r\n    var x = document.getElementById(\"val\").value;\r\n    if (this.state.abar === 6) {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"error\",\r\n        title: \"Buffer Overflow\",\r\n        message: \"Only 6 elements allowed\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    } else if (x == \"\") {\r\n      window.notification = new Notification();\r\n      let instance = window.notification.new({\r\n        type: \"warning\",\r\n        title: \"No Input\",\r\n        message: \"Provide some input please\",\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n        thickBorder: \"bottom\",\r\n        iconless: false,\r\n        closable: false,\r\n        sticky: false,\r\n        closable: true,\r\n      });\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.state.abar; i++) {\r\n      array.push(this.state.array[i]);\r\n    }\r\n    array.push(parseInt(x));\r\n    this.state.abar = parseInt(this.state.abar) + parseInt(1);\r\n    ac = array;\r\n    sz = this.state.abar;\r\n    var x = generateItems(parseInt(sz), (i) => ({\r\n      id: i,\r\n      data: `${ac[parseInt(i)]}`,\r\n    }));\r\n    this.state.items3 = x;\r\n    this.setState({ array });\r\n    const arrayBar = document.getElementsByClassName(this.state.cn);\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (!arrayBar[i]) {\r\n        continue;\r\n      } else {\r\n        const boStyle = arrayBar[i].style;\r\n      }\r\n    }\r\n    window.notification = new Notification();\r\n    let instance = window.notification.new({\r\n      type: \"success\",\r\n      title: \"Task Successful\",\r\n      message: \"Element Successfully Popped\",\r\n      duration: 2000,\r\n      position: \"bottom-right\",\r\n      thickBorder: \"bottom\",\r\n      iconless: false,\r\n      closable: false,\r\n      sticky: false,\r\n      closable: true,\r\n    });\r\n    var vl = document.getElementById(\"x\");\r\n    vl.style.width = (this.state.abar - 1) * 130 + 142 + \"px\";\r\n  }\r\n\r\n  push() {\r\n    this.addValueArr();\r\n  }\r\n\r\n  messageCallSet() {}\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button onClick={() => this.resetArray()} id=\"dataMainBtn\">\r\n            Generate a new queue\r\n          </Button>\r\n          <input type=\"number\" id=\"val\" name=\"val\" />\r\n          <Button onClick={() => this.push()} id=\"dataBtn\">\r\n            Push\r\n          </Button>\r\n          <Button onClick={() => this.pop()} id=\"dataBtn\">\r\n            Pop\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"array-container\" id=\"x\">\r\n          <Container\r\n            id=\"z\"\r\n            groupName=\"1\"\r\n            style={groupStyle}\r\n            orientation=\"horizontal\"\r\n            getChildPayload={(i) => this.state.items3[i]}\r\n            onDrop={(e) => {\r\n              this.setState({\r\n                array: applyDrag(\r\n                  this.refs.dsType.value,\r\n                  this.state.array,\r\n                  this.state.items3,\r\n                  e\r\n                ),\r\n              });\r\n              this.messageCallSet();\r\n            }}\r\n          >\r\n            {array.map((value, idx) => (\r\n              <Draggable>\r\n                <div className={this.state.cn} id={idx}>\r\n                  <p className=\"p2\">{value}</p>\r\n                </div>\r\n              </Draggable>\r\n            ))}\r\n          </Container>\r\n        </div>\r\n        <div className=\"array-container2\" id=\"arrow\">\r\n          {array.map((value, idx) => (\r\n            <div className={this.state.cn} id={idx}>\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"arrangement\">\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import '../dataInfo.css';\r\nimport QueueVisualizer from './QueueVisualizer.jsx';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction QueueInfo() {\r\n  return (\r\n    <div className=\"Whole\">\r\n      <Container>\r\n        <Col className=\"Info\">\r\n          <Row>\r\n            <h1 className=\"topic\">Queue</h1>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"det\">\r\n              Queue is an abstract data structure, somewhat similar to Stacks. Unlike stacks, a queue is open at both its ends. One end is always used to insert data (enqueue) and the other is used to remove data (dequeue).\r\n              Queue follows First-In-First-Out methodology, i.e., the data item stored first will be accessed first.\r\n              A real-world example of queue can be a single-lane one-way road, where the vehicle enters first, exits first. More real-world examples can be seen as queues at the ticket windows and bus-stops.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"App\" id=\"abc\">\r\n            <QueueVisualizer></QueueVisualizer>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueueInfo;\r\n","export default __webpack_public_path__ + \"static/media/EduhubLogo1.5c9e681a.jpg\";","import React from \"react\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\nimport { Button } from \"@material-ui/core\";\r\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\r\nimport StorageIcon from '@mui/icons-material/Storage';\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport \"./styles/Drawer.css\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\"\r\nimport Box from \"@mui/material/Box\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport logo from \"../assets/EduhubLogo1.jpg\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst drawerWidth = 230;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen\r\n  }),\r\n  overflowX: \"hidden\"\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(9)} + 1px)`\r\n  }\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\"\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create([\"width\", \"margin\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  })\r\n}));\r\n\r\nconst CustomDrawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\"\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme)\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme)\r\n  })\r\n}));\r\n\r\nconst Drawer = props => {\r\n  const { history } = props;\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expandSort, setExpandSort] = React.useState(false);\r\n  const [expandDs, setExpandDs] = React.useState(false);\r\n  const [expandPath, setExpandPath] = React.useState(false);\r\n  const userName = props.userName;\r\n  const email = props.email;\r\n  const password = props.password;\r\n  const AccountName = userName !== \"\" ? userName : \"Account\";\r\n\r\n  const handleSort = () => {\r\n    setExpandSort(!expandSort);\r\n    if (!expandSort) {\r\n      setExpandPath(false);\r\n      setExpandDs(false);\r\n    }\r\n  };\r\n\r\n  const handleDS = () => {\r\n    setExpandDs(!expandDs);\r\n    if (!expandDs) {\r\n      setExpandPath(false);\r\n      setExpandSort(false);\r\n    }\r\n  };\r\n\r\n  const handlePath = () => {\r\n    setExpandPath(!expandPath);\r\n    if (!expandPath) {\r\n      setExpandDs(false);\r\n      setExpandSort(false);\r\n    }\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n    setExpandDs(false);\r\n    setExpandPath(false);\r\n    setExpandSort(false);\r\n  }\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeRoundedIcon style={{ color: '#0b132f' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/\")\r\n    },\r\n    {\r\n      text: \"Data Structures\",\r\n      icon: <StorageIcon style={{ color: '#0b132f' }} fontSize=\"large\" />,\r\n      onClick: () => handleDS()\r\n    },\r\n    {\r\n      text: \"Sortings\",\r\n      icon: <EqualizerIcon style={{ color: '#0b132f' }} fontSize=\"large\" />,\r\n      onClick: () => handleSort()\r\n    },\r\n    {\r\n      text: \"Path Finding\",\r\n      icon: <LocationOnIcon style={{ color: '#0b132f' }} fontSize=\"large\" />,\r\n      onClick: () => handlePath()\r\n    }\r\n  ];\r\n\r\n  const dsList = [\r\n    {\r\n      text: \"Array\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/Array\")\r\n    },\r\n    {\r\n      text: \"Sorted Set\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/SortedSet\")\r\n    },\r\n    {\r\n      text: \"Unsorted Set\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/UnsortedSet\")\r\n    },\r\n    {\r\n      text: \"Singly Linked List\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/SinglyLinkedList\")\r\n    },\r\n    {\r\n      text: \"Doubly Linked List\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/DoublyLinkedList\")\r\n    },\r\n    {\r\n      text: \"Queue\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/DataStructure/Queue\")\r\n    },\r\n  ]\r\n\r\n  const sortList = [\r\n    {\r\n      text: \" Bubble Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/BubbleSort\"),\r\n\r\n    },\r\n    {\r\n      text: \" Comb Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/CombSort\")\r\n    },\r\n    {\r\n      text: \" Cycle Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/CycleSort\")\r\n    },\r\n    {\r\n      text: \" Gnome Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/GnomeSort\")\r\n    },\r\n    {\r\n      text: \" Heap Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/HeapSort\")\r\n    },\r\n    {\r\n      text: \" Insertion Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/InsertionSort\")\r\n    },\r\n    {\r\n      text: \" Merge Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/MergeSort\")\r\n    },\r\n    {\r\n      text: \" PigeonHole Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/PigeonHoleSort\")\r\n    },\r\n    {\r\n      text: \" Quick Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/QuickSort\")\r\n    },\r\n    {\r\n      text: \" Radix Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/RadixSort\")\r\n    },\r\n    {\r\n      text: \" Selection Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/SelectionSort\")\r\n    },\r\n    {\r\n      text: \" Shell Sort\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Sorting/ShellSort\")\r\n    },\r\n  ]\r\n\r\n  const pathList = [\r\n    {\r\n      text: \"A* Search\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Pathfinding/AStar\")\r\n    },\r\n    {\r\n      text: \"Breadth First Search\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Pathfinding/BFS\")\r\n    },\r\n    {\r\n      text: \"Depth First Search\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Pathfinding/DFS\")\r\n    },\r\n    {\r\n      text: \"Dijkstra Search\",\r\n      icon: <KeyboardArrowRightIcon style={{ color: 'black' }} fontSize=\"large\" />,\r\n      onClick: () => history.push(\"/Pathfinding/Dijkstra\")\r\n    },\r\n  ]\r\n\r\n  const accountRedirect = () => {\r\n    if (userName === \"\") {\r\n      history.push(\"/Auth\");\r\n    }\r\n  }\r\n\r\n  const signOut = () => {\r\n    props.setUserName(\"\");\r\n    props.setPassword(\"\");\r\n    props.setEmail(\"\");\r\n    Swal.fire({\r\n      icon: 'success',\r\n      text: \"Logout Successful\",\r\n      imageWidth: 100,\r\n      imageHeight: 100,\r\n      width: 350,\r\n      showConfirmButton: false,\r\n      showCloseButton: true,\r\n      timer: 2000\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" open={open} color=\"inherit\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: \"25px\",\r\n              ...(open && { display: \"none\" })\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={logo} onClick={() => history.push('/')} alt=\"EduHub\" width=\"110\" height=\"72\" />\r\n          <div className=\"position-absolute mx-4\" style={{ right: \"0\" }}>\r\n            {userName === \"\" && email === \"\" && password === \"\" &&\r\n              <Button id=\"signBtn\" onClick={() => history.push('/Auth')}>Sign In</Button>}\r\n            {userName !== \"\" && email !== \"\" && password !== \"\" &&\r\n              <Button id=\"logOutBtn\" onClick={signOut}>Log Out</Button>}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CustomDrawer variant=\"permanent\" open={open} onMouseEnter={handleDrawerOpen} onMouseLeave={handleDrawerClose}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <List sx={{ height: \"300vh\" }}>\r\n          <Divider />\r\n          {itemsList.map((item, index) => {\r\n            const { text, icon, onClick } = item;\r\n            if (text === \"Sortings\") {\r\n              return (\r\n                <>\r\n                  <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                    {expandSort ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </ListItem>\r\n                  <Divider />\r\n                  <Collapse in={expandSort} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      {sortList.map((item2, index2) => {\r\n                        const { text, icon, onClick } = item2;\r\n                        return (\r\n                          <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                    <Divider />\r\n                  </Collapse>\r\n                </>\r\n              );\r\n            }\r\n            else if (text === \"Path Finding\") {\r\n              return (\r\n                <div style={{ marginBottom: \"44px\" }}>\r\n                  <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                    {expandPath ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </ListItem>\r\n                  <Divider />\r\n                  <Collapse in={expandPath} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      {pathList.map((item2, index2) => {\r\n                        const { text, icon, onClick } = item2;\r\n                        return (\r\n                          <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                    <Divider />\r\n                  </Collapse>\r\n                </div>\r\n              );\r\n            }\r\n            else if (text === \"Data Structures\") {\r\n              return (\r\n                <>\r\n                  <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                    {expandDs ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </ListItem>\r\n                  <Divider />\r\n                  <Collapse in={expandDs} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      {dsList.map((item2, index2) => {\r\n                        const { text, icon, onClick } = item2;\r\n                        return (\r\n                          <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                            <ListItemText primary={text} />\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                    <Divider />\r\n                  </Collapse>\r\n                </>\r\n              );\r\n            }\r\n            else if (text === \"Home\") {\r\n              return (\r\n                <>\r\n                  <ListItem width=\"50%\" button key={text} onClick={onClick}>\r\n                    {icon && <ListItemIcon >{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n          <div className=\"position-absolute w-100\" style={{ bottom: \"0\", left: \"0\" }}>\r\n            <Divider />\r\n            <ListItem width=\"50%\" button key=\"Account\" onClick={accountRedirect}>\r\n              <ListItemIcon ><AccountCircleIcon style={{ color: '#0b132f' }} fontSize=\"large\" /></ListItemIcon>\r\n              <ListItemText primary={AccountName} />\r\n            </ListItem>\r\n          </div>\r\n        </List>\r\n      </CustomDrawer>\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default withRouter(Drawer);\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/Home.js\";\r\nimport Auth from './components/auth/Auth.js';\r\nimport BubbleInfo from \"./routes/Sorting/BubbleSort/BubbleInfo\";\r\nimport CombInfo from \"./routes/Sorting/CombSort/CombInfo\";\r\nimport CycleInfo from \"./routes/Sorting/CycleSort/CycleInfo\";\r\nimport GnomeInfo from \"./routes/Sorting/GnomeSort/GnomeInfo\";\r\nimport HeapInfo from \"./routes/Sorting/HeapSort/HeapInfo\";\r\nimport InsertionInfo from \"./routes/Sorting/InsertionSort/InsertionInfo\";\r\nimport MergeInfo from \"./routes/Sorting/MergeSort/MergeInfo\";\r\nimport PigeonHoleInfo from \"./routes/Sorting/PigeonHoleSort/PigeonHoleInfo\";\r\nimport QuickInfo from \"./routes/Sorting/QuickSort/QuickInfo\";\r\nimport RadixInfo from \"./routes/Sorting/RadixSort/RadixInfo\";\r\nimport SelectionInfo from \"./routes/Sorting/SelectionSort/SelectionInfo\";\r\nimport ShellInfo from \"./routes/Sorting/ShellSort/ShellInfo\";\r\nimport AStarInfo from \"./routes/Pathfinding/AStar/AStarInfo\";\r\nimport BFSInfo from \"./routes/Pathfinding/BFS/BFSInfo\";\r\nimport DFSInfo from \"./routes/Pathfinding/DFS/DFSInfo\";\r\nimport DijkstraInfo from \"./routes/Pathfinding/Dijkstra/DijkstraInfo\";\r\nimport ArrayInfo from \"./routes/DataStructure/Array/ArrayInfo\";\r\nimport SSInfo from \"./routes/DataStructure/SortedSet/SSInfo\";\r\nimport USInfo from \"./routes/DataStructure/UnsortedSet/USInfo\";\r\nimport SLLInfo from \"./routes/DataStructure/SinglyLinkedList/SLLInfo\";\r\nimport DLLInfo from \"./routes/DataStructure/DoublyLinkedList/DLLInfo\";\r\nimport QueueInfo from \"./routes/DataStructure/Queue/QueueInfo\";\r\nimport Drawer from \"./components/Drawer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    marginTop: 72\r\n  }\r\n});\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Drawer setUserName={setUserName} setEmail={setEmail} setPassword={setPassword}\r\n        userName={userName} email={email} password={password} />\r\n      <Switch>\r\n        <Route exact from=\"/\" component={Home} />\r\n        <Route exact from=\"/Auth\" >\r\n          {userName === \"\" && email === \"\" && password === \"\" &&\r\n            <Auth setUserName={setUserName} setEmail={setEmail} setPassword={setPassword} />\r\n          }\r\n        </Route>\r\n        <Route exact path=\"/Sorting/BubbleSort\" render={props => <BubbleInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/CombSort\" render={props => <CombInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/CycleSort\" render={props => <CycleInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/GnomeSort\" render={props => <GnomeInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/HeapSort\" render={props => <HeapInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/InsertionSort\" render={props => <InsertionInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/MergeSort\" render={props => <MergeInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/PigeonHoleSort\" render={props => <PigeonHoleInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/QuickSort\" render={props => <QuickInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/RadixSort\" render={props => <RadixInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/SelectionSort\" render={props => <SelectionInfo {...props} />} />\r\n        <Route exact path=\"/Sorting/ShellSort\" render={props => <ShellInfo {...props} />} />\r\n        <Route exact path=\"/Pathfinding/AStar\" render={props => <AStarInfo {...props} />} />\r\n        <Route exact path=\"/Pathfinding/BFS\" render={props => <BFSInfo {...props} />} />\r\n        <Route exact path=\"/Pathfinding/DFS\" render={props => <DFSInfo {...props} />} />\r\n        <Route exact path=\"/Pathfinding/Dijkstra\" render={props => <DijkstraInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/Array\" render={props => <ArrayInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/SortedSet\" render={props => <SSInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/UnsortedSet\" render={props => <USInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/SinglyLinkedList\" render={props => <SLLInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/DoublyLinkedList\" render={props => <DLLInfo {...props} />} />\r\n        <Route exact path=\"/DataStructure/Queue\" render={props => <QueueInfo {...props} />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <CssBaseline />\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}